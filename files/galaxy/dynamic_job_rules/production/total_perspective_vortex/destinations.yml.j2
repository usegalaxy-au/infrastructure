destinations:
  default:
    runner: slurm
    abstract: true
    context:
      destination_total_cores: null
      destination_total_mem: null
    # params: # commented out 3/4/23 to check whether this helps with load on nfs
    #   tmp_dir: True  # TODO: check that this works
    scheduling:
      accept:
        - docker # to satisfy tools in shared db that have require: docker
        - singularity # to satisfy tools in shared db that have require: singularity
  _slurm_destination:
    abstract: true
    params:
        nativeSpecification: "--nodes=1 --ntasks={cores} --ntasks-per-node={cores} --mem={round(float(mem or 3.8)*1024)} --partition={partition}"
        metadata_strategy: extended
    rules:
      - id: slurm_destination_singularity_rule
        if: entity.params.get('singularity_enabled')
        params:
            singularity_volumes: '{ slurm_singularity_volumes }'
            singularity_default_container_id: "{{ singularity_default_container_id }}"
      - id: slurm_destination_docker_rule
        if: entity.params.get('docker_enabled')
        params:
            docker_volumes: '{ slurm_docker_volumes }'
            docker_memory: '{mem}G'  # TODO: here and in _pulsar_destination, int or round to stop this from ever being 3.79999999999996
            docker_sudo: false
  _pulsar_destination:
    abstract: true
    params:
      submit_native_specification: "--nodes=1 --ntasks={cores} --ntasks-per-node={cores} --mem={round(float(mem or 3.8)*1024)} --partition={partition}"
      jobs_directory: /mnt/pulsar/files/staging
      transport: curl
      remote_metadata: 'false'
      default_file_action: remote_transfer
      outputs_to_working_directory: false
      dependency_resolution: remote
      rewrite_parameters: 'true'
      persistence_directory: /mnt/pulsar/files/persisted_data
    rules:
      - id: pulsar_destination_singularity_rule
        if: entity.params.get('singularity_enabled')
        params:
            singularity_volumes: '{ pulsar_singularity_volumes }'
            container_resolvers: 
                - type: explicit_singularity
                - type: cached_mulled_singularity
                  cache_directory: /cvmfs/singularity.galaxyproject.org/all
                  cache_directory_cacher_type: dir_mtime
                - type: mulled_singularity
            singularity_default_container_id: "{{ singularity_default_container_id }}"
            dependency_resolution: none
        env:
          SINGULARITY_CACHEDIR: /mnt/pulsar/deps/singularity
          SINGULARITY_TMPDIR: /mnt/pulsar/deps/singularity/tmp

      - id: pulsar_destination_docker_rule
        if: entity.params.get('docker_enabled')
        params:
            docker_volumes: '{ pulsar_docker_volumes }'
            docker_set_user: '1000'
            docker_memory: '{mem}G'
            docker_sudo: false

  slurm:
    inherits: _slurm_destination
    runner: slurm
    max_accepted_cores: 32
    max_accepted_mem: 125
    context:
      destination_total_cores: 192
      destination_total_mem: 750
      shared_resource_destination_ids:
        - slurm-training
        - interactive_pulsar
    tags: {{ job_conf_limits.environments['slurm'].tags }}
    scheduling:
      accept:
        - slurm
        - gtdbtk_database
        - bakta_database
        - funannotate
        - eggnog
  slurm-training:
    inherits: _slurm_destination
    runner: slurm
    max_accepted_cores: 32
    max_accepted_mem: 125
    context:
      destination_total_cores: 192
      destination_total_mem: 737
    tags: {{ job_conf_limits.environments['slurm-training'].tags }}
    scheduling:
      accept:
        - slurm
        - gtdbtk_database
        - bakta_database
        - funannotate
        - eggnog
      require:
        - training
  interactive_pulsar:
    max_accepted_cores: 32
    max_accepted_mem: 125
    context:
      destination_total_cores: 192
      destination_total_mem: 737
    runner: pulsar_embedded
    tags: {{ job_conf_limits.environments['interactive_pulsar'].tags }}
    params:
      submit_native_specification: "--nodes=1 --ntasks={cores} --ntasks-per-node={cores} --mem={round(float(mem or 3.8)*1024)} --partition={partition}"
      docker_enabled: true
      docker_volumes: "{{ slurm_docker_volumes }}"
      docker_sudo: false
      docker_net: bridge
      docker_auto_rm: true
      docker_set_user: ''
      require_container: true
      outputs_to_working_directory: false
      container_monitor_result: callback
    scheduling:
      require:
        - interactive_pulsar
  pulsar-mel2:
    inherits: _pulsar_destination
    runner: pulsar_mel2_runner
    max_accepted_cores: 8
    max_accepted_mem: 31.25
    context:
      destination_total_cores: 56
      destination_total_mem: 218.75
    tags: {{ job_conf_limits.environments['pulsar-mel2'].tags }}
    scheduling:
      accept:
        - pulsar-mel2
        - bakta_database
        - eggnog
      require:
        - pulsar
        - pulsar-quick
  pulsar-mel3:
    inherits: _pulsar_destination
    runner: pulsar-mel3_runner
    max_accepted_cores: 32
    max_accepted_mem: 62.5 # can allocate up to 125 but this has been reduced so that those jobs are scheduled to abundant high memory resources
    context:
      destination_total_cores: 144
      destination_total_mem: 553
    tags: {{ job_conf_limits.environments['pulsar-mel3'].tags }}
    scheduling:
      accept:
        - pulsar-mel3
        - cvmfs_cache_100plus
        - bakta_database
        - funannotate
        - eggnog
        # - training # Temporary reroute while training pulsar is offline
        # - pulsar-blast  # alternate location for pulsar blast jobs when pulsar-qld-blast is unavailable
      require:
        - pulsar
  pulsar-high-mem1:
    inherits: _pulsar_destination
    runner: pulsar-high-mem1_runner
    max_accepted_cores: 126
    max_accepted_mem: 3845.1
    context:
      destination_total_cores: 126
      destination_total_mem: 3845.1
    min_accepted_mem: 62.51
    tags: {{ job_conf_limits.environments['pulsar-high-mem1'].tags }}
    scheduling:
      accept:
        - pulsar-high-mem1
        - cvmfs_cache_100plus
        - cvmfs_cache_800plus
      require:
        - pulsar
  pulsar-high-mem2:
    inherits: _pulsar_destination
    runner: pulsar-high-mem2_runner
    max_accepted_cores: 126
    max_accepted_mem: 1922.49
    context:
      destination_total_cores: 126
      destination_total_mem: 1922.49
    # min_accepted_mem: 62.51 # 2/10/23 accept all job sizes
    tags: {{ job_conf_limits.environments['pulsar-high-mem2'].tags }}
    scheduling:
      accept:
        - cvmfs_cache_100plus
        - cvmfs_cache_800plus
      require:
        - pulsar
        - pulsar-high-mem2
  pulsar-mel-blast:  # relief destination while pulsar-qld-blast is offline
    inherits: _pulsar_destination
    runner: pulsar-high-mem2_runner
    max_accepted_cores: 15
    max_accepted_mem: 225
    context:
      destination_total_cores: 60
      destination_total_mem: 900
    tags: {{ job_conf_limits.environments['pulsar-mel-blast'].tags }}
    scheduling:
      accept:
        - pulsar-mel-blast
        - cvmfs_cache_100plus
        - cvmfs_cache_800plus
      require:
        - pulsar
        - pulsar-blast
        - offline
  pulsar-qld-high-mem0:
    inherits: _pulsar_destination
    runner: pulsar-qld-high-mem0_runner
    max_accepted_cores: 240
    max_accepted_mem: 3845.07
    min_accepted_mem: 40
    context:
      destination_total_cores: 240
      destination_total_mem: 3845.07
    tags: {{ job_conf_limits.environments['pulsar-qld-high-mem0'].tags }}
    scheduling:
      accept:
        - pulsar-qld-high-mem0
        - cvmfs_cache_100plus
        - cvmfs_cache_800plus
        - bakta_database
        - funannotate
        - eggnog
      require:
        - pulsar
  pulsar-qld-high-mem1:
    inherits: _pulsar_destination
    runner: pulsar-qld-high-mem1_runner
    max_accepted_cores: 240
    max_accepted_mem: 3845.07
    min_accepted_mem: 40
    context:
      destination_total_cores: 240
      destination_total_mem: 3845.07
    tags: {{ job_conf_limits.environments['pulsar-qld-high-mem1'].tags }}
    scheduling:
      accept:
        - pulsar-qld-high-mem1
        - cvmfs_cache_100plus
        - cvmfs_cache_800plus
        - gtdbtk_database
      require:
        - pulsar
  pulsar-qld-high-mem2:
    inherits: _pulsar_destination
    runner: pulsar-qld-high-mem2_runner
    max_accepted_cores: 240
    max_accepted_mem: 3845.07
    min_accepted_mem: 62.51
    context:
      destination_total_cores: 240
      destination_total_mem: 3845.07
    tags: {{ job_conf_limits.environments['pulsar-qld-high-mem2'].tags }}
    scheduling:
      accept:
        - pulsar-qld-high-mem2
        - cvmfs_cache_100plus
        - cvmfs_cache_800plus
      require:
        - pulsar
  pulsar-nci-training:
    inherits: _pulsar_destination
    runner: pulsar-nci-training_runner
    max_accepted_cores: 16
    max_accepted_mem: 47.07
    context:
      destination_total_cores: 192
      destination_total_mem: 565
    tags: {{ job_conf_limits.environments['pulsar-nci-training'].tags }}
    scheduling:
      accept:
        - pulsar-nci-training
        - cvmfs_cache_100plus
        - pulsar-blast # allow training jobs with require: pulsar-blast to run here
        - bakta_database
        - funannotate
        - eggnog
      require:
        - pulsar
        - training

  pulsar-qld-blast:
    inherits: _pulsar_destination
    runner: pulsar-qld-blast_runner
    max_accepted_cores: 60
    max_accepted_mem: 200
    context:
      destination_total_cores: 60
      destination_total_mem: 200
    tags: {{ job_conf_limits.environments['pulsar-qld-blast'].tags }}
    scheduling:
      accept:
        - pulsar-qld-blast
        - cvmfs_cache_100plus
        - cvmfs_cache_800plus
      require:
        - pulsar
        - pulsar-blast
  pulsar-QLD:
    inherits: _pulsar_destination
    runner: pulsar-QLD_runner
    max_accepted_cores: 16
    max_accepted_mem: 62.5
    context:
      destination_total_cores: 112
      destination_total_mem: 437.5
    tags: {{ job_conf_limits.environments['pulsar-QLD'].tags }}
    scheduling:
      accept:
        - pulsar-QLD
        - cvmfs_cache_100plus
        - funannotate
        - bakta_database
      require:
        - pulsar
        # - pulsar-quick  # tag given to tools where jobs are bound to complete in less than a day
  pulsar-azure:
    inherits: _pulsar_destination
    runner: pulsar_azure_0_runner
    max_accepted_cores: 24
    max_accepted_mem: 209
    context:
      destination_total_cores: 64
      destination_total_mem: 558
    tags: {{ job_conf_limits.environments['pulsar-azure'].tags }}
    scheduling:
      require:
        - pulsar
        - pulsar-azure
        - offline
  pulsar-azure-gpu:
    inherits: _pulsar_destination
    runner: pulsar_azure_0_runner
    max_accepted_cores: 24
    max_accepted_mem: 209
    max_accepted_gpus: 1
    context:
      destination_total_cores: 64
      destination_total_mem: 558
    tags: {{ job_conf_limits.environments['pulsar-azure-gpu'].tags }}
    scheduling:
      require:
        - pulsar
        - pulsar-azure-gpu
        - offline
  pulsar-azure-1-gpu:
    inherits: _pulsar_destination
    runner: pulsar_azure_0_runner
    max_accepted_cores: 24
    max_accepted_mem: 209
    max_accepted_gpus: 1
    context:
      destination_total_cores: 64
      destination_total_mem: 558
    tags: {{ job_conf_limits.environments['pulsar-azure-1-gpu'].tags }}
    scheduling:
      require:
        - pulsar
        - pulsar-azure-1-gpu
        - offline
  _pulsar_qld_gpu:
    abstract: true
    inherits: _pulsar_destination
    max_accepted_cores: 64
    max_accepted_mem: 582
    max_accepted_gpus: 1
    context:
      destination_total_cores: 64
      destination_total_mem: 582
    scheduling:
      require:
        - pulsar
        - pulsar-qld-gpu
  pulsar-qld-gpu1:
    inherits: _pulsar_qld_gpu
    runner: pulsar-qld-gpu1_runner
    scheduling:
      accept:
        - pulsar-qld-gpu1
        - pulsar-qld-gpu-alphafold
  pulsar-qld-gpu2:
    inherits: _pulsar_qld_gpu
    runner: pulsar-qld-gpu2_runner
    scheduling:
      accept:
        - pulsar-qld-gpu2
        - pulsar-qld-gpu-alphafold
  pulsar-qld-gpu3:
    inherits:  _pulsar_qld_gpu
    runner: pulsar-qld-gpu3_runner
    scheduling:
      accept:
        - pulsar-qld-gpu3
        - pulsar-qld-gpu-alphafold
  pulsar-qld-gpu4:
    inherits: _pulsar_qld_gpu
    runner: pulsar-qld-gpu4_runner
    scheduling:
      accept:
        - pulsar-qld-gpu4
        - pulsar-qld-gpu-other
  pulsar-qld-gpu5:
    inherits: _pulsar_qld_gpu
    runner: pulsar-qld-gpu5_runner
    scheduling:
      accept:
        - pulsar-qld-gpu5
        - pulsar-qld-gpu-other
