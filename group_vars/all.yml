# append domain to ansible_hostname (from hosts file) for hostname variable
hostname: "{{ ansible_hostname }}.usegalaxy.org.au"

#List of users to install and setup /homes for
__machine_users:
    # special users range
    - name: jenkins_bot
      uid: 7000
      roles:
        - sudo
        - galaxy_admin
      key: files/keys/jenkins_bot.pub
      email: "{{ jenkins_bot_email }}" # this is not a real email address and will cause issues if validation is required

    # special agent 007
    - name: simon
      uid: 7007
      roles:
        - nologin
    #   - sudo
    #   - galaxy_admin
      key: files/keys/simon.pub
      email: "{{ simon_email }}"

    # infrastructure team
    - name: justin
      uid: 7011
      roles:
        - sudo
        - galaxy_admin
      key: files/keys/justin.pub
      email: "{{ justin_email }}"
    - name: cat
      uid: 7012
      roles:
        - sudo
        - galaxy_admin
      key: files/keys/catherine.pub
      email: "{{ cat_email }}"
    - name: nuwan
      uid: 7013
      roles:
        - sudo
        - galaxy_admin
      key: files/keys/nuwan.pub
      galaxy_admin: true
      email: "{{ nuwan_email }}"
 
    # user support team
    - name: igor
      uid: 7101
      roles:
        - tiaas_admin
        - galaxy_admin
      key: files/keys/igor.pub
      email: "{{ igor_email }}"
    - name: gareth
      uid: 7102
      roles:
        - galaxy_admin
      key: files/keys/gareth.pub
      email: "{{ gareth_email }}"
 
    # tools team
    - name: mike
      uid: 7201
      roles:
        - galaxy_admin
      key: files/keys/mike.pub
      email: "{{ mike_email }}"
    - name: cameron
      uid: 7202
      roles:
        - sudo
        - galaxy_admin
      key: files/keys/cameron.pub
      email: "{{ cameron_email }}"
    - name: tom
      uid: 7203
      roles:
        - galaxy_admin
      key: files/keys/tom.pub
      email: "{{ tom_email }}"

    # other
    - name: anna
      uid: 7301
      roles:
        - tiaas_admin
        - galaxy_admin
      key: files/keys/anna.pub
      email: "{{ anna_email }}"
    - name: michaeld #aarnet
      uid: 7302
      roles:
        - sudo
        - galaxy_admin
      key: files/keys/michaeld.pub
      email: "{{ michaeld_email }}"
    - name: tristan
      uid: 7303
      roles: []
      key: files/keys/tristan.pub
      email: "{{ tristan_email }}"


host_machine_users: [] # by default - may be overridden in host/group vars files
machine_users: "{{ host_machine_users + (__machine_users | rejectattr('name', 'in', (host_machine_users | map(attribute='name')))) }}"

# no longer active accounts to be removed - only name field is required
remove_machine_users:
    - name: gavin
    # uid: 7014
    # roles:
    #   - sudo
    #   - galaxy_admin
    # key: files/keys/gavin.pub
    # email: "{{ gavin_email }}"
    - name: ollie
    # uid: 7015
    # roles:
    #   - sudo
    # key: files/keys/ollie.pub
    # email: "{{ ollie_email }}"
    - name: grace
    # roles:
    #   - sudo
    # key: files/keys/grace.pub
    # email: "{{ grace_email }}"
    - name: nick
    # roles:
    #   - sudo
    #   - galaxy_admin
    # key: files/keys/nick.pub
    # email: "{{ nick_email }}"
    - name: thom


galaxy_user:
  name: galaxy
  shell: /bin/bash
  uid: "{{ galaxy_uid }}"
  group: galaxy
  gid: "{{ galaxy_gid }}"

#Common packages to install on all of our machines.
common_packages:
    - python-is-python3
    - vim
    - acl
    - git
    - build-essential
    - python3-dev
    - libcurl4-openssl-dev
    - libgnutls28-dev
    - libssl-dev
    - python3-virtualenv
    - python3-pip
    - htop
    - nfs-common
    - atop
    - speedometer
    - byobu
    - apt-transport-https
    - tar
    - bzip2
    - libgl1-mesa-glx
    - unzip
    - tree
    - python3-passlib
    - xfsprogs
    - jq
    - glances
    - fail2ban
    - software-properties-common
    - pigz
    - sqlite3
    - iotop

problematic_packages_ubuntu_24_04:
    - libgl1-mesa-glx

additional_packages_ubuntu_24_04:
    # NOTE: libgl1 and libglx-mesa0 provides equivalent behaviour as obsolete package (23.10 and later) libgl1-mesa-glx
    # TODO: if libgl1-mesa-glx package is not actually needed any more, these could be removed
    - libgl1
    - libglx-mesa0

#Set pip to be pip3 by default - see roles/geerlingguy.pip/defaults/main.yml
pip_package: python3-pip

# cvmfs
cvmfs_role: client
galaxy_cvmfs_repos_enabled: true

galaxy_cvmfs_server_urls:
  - domain: galaxyproject.org
    #use_geoapi: yes
    urls:
      - "http://cvmfs1-mel0.gvl.org.au/cvmfs/@fqrn@"
      - "http://cvmfs1-psu0.galaxyproject.org/cvmfs/@fqrn@"
      - "http://cvmfs1-iu0.galaxyproject.org/cvmfs/@fqrn@"
      - "http://cvmfs1-tacc0.galaxyproject.org/cvmfs/@fqrn@"
      - "http://cvmfs1-ufr0.galaxyproject.eu/cvmfs/@fqrn@"

# miniconda
miniconda_install: true
miniconda_update: false

miniconda_channels:
  - conda-forge
  - bioconda

# Monitoring
influx_url: stats.usegalaxy.org.au
grafana_server_url: "https://{{ influx_url }}:8086"
influx_salt: "{{ prod_queue_size_salt }}"

telegraf_agent_package_state: latest
telegraf_agent_package_method: repo
telegraf_agent_hostname: "{{ inventory_hostname }}"

# enable tools with 'test' tag for certain users
test_tool_users: "{{ machine_users | selectattr('email', 'defined') | map(attribute='email') | list + [anna_email] }}"

galaxy_config_file_src_dir: files/galaxy
galaxy_config_template_src_dir: templates/galaxy

# Job metrics configuration
galaxy_job_metrics_plugins:
  - type: core
  - type: cpuinfo
  - type: meminfo
  - type: uname
  - type: cgroup
  - type: env
    variables: 'HOSTNAME,SLURM_CPUS_ON_NODE,SLURM_JOB_ID'

pulsar_job_metrics_plugins: "{{ galaxy_job_metrics_plugins }}"

internal_ssh_keys:
  ubuntu_maintenance_key:
    private_key_content: "{{ vault_ubuntu_maintenance_key }}"
    public_key_src: files/keys/ubuntu_maintenance_key.pub
    user: ubuntu
  internal_hop_key:
    private_key_content: "{{ vault_internal_hop_key }}"
    public_key_src: files/keys/internal_hop_key.pub
    user: ubuntu
  pulsar_internal_hop_key:
    private_key_content: "{{ vault_pulsar_internal_hop_key }}"
    public_key_src: files/keys/pulsar_internal_hop_key.pub
    user: ubuntu

# Golang
golang_version: '1.15.6' # default for role version 2.6.3
golang_install_dir: '/opt/go/{{ golang_version }}' # default for role version 2.6.3
golang_gopath: '/var/workspace-go'

# Singularity target version
singularity_version: "3.7.4"
singularity_go_path: "{{ golang_install_dir }}"

# docker
docker_install_compose: false

# slurm config

# slurm
group_slurm_config:
  #SlurmDBd includes
  AccountingStorageType: accounting_storage/slurmdbd
  # SCHEDULING
  SchedulerType: sched/backfill
  SelectType: select/cons_res
  SelectTypeParameters: CR_CPU_Memory,CR_LLN
  UnkillableStepTimeout: 180

  AccountingStorageHost: "{% if ansible_hostname == slurm_controller_host %}localhost{% else %}{{ slurm_controller_host }}{% endif %}"
  ControlMachine: "{{ slurm_controller_host }}"

  # cgroups
  JobAcctGatherType: jobacct_gather/cgroup
  JobAcctGatherFrequency: task=15
  ProctrackType: proctrack/cgroup
  TaskPlugin: task/cgroup

slurm_config: "{{ group_slurm_config | combine(host_slurm_config | default({}), recursive=True) }}"

slurm_cgroup_config:
  CgroupAutomount: yes
  ConstrainCores: yes
  ConstrainRAMSpace: yes
  ConstrainSwapSpace: yes

# slurmdbd
__slurmdbd_config_default: # this is not needed if this PR is merged: https://github.com/galaxyproject/ansible-slurm/pull/49
  AuthType: auth/munge
  DbdPort: 6819
  SlurmUser: "{{ __slurm_user_name }}"
  LogFile: "{{ __slurm_log_dir ~ '/slurmdbd.log' if __slurm_debian else omit }}"

slurmdbd_config:
  AuthType: auth/munge
  AuthInfo: /var/run/munge/munge.socket.2
  DbdHost: localhost
  StorageHost: localhost
  StorageLoc: "{{ slurm_database }}"
  StoragePass: "{{ slurm_database_user_password }}"
  StorageType: accounting_storage/mysql
  StorageUser: "{{ slurm_database_user }}"
  PidFile: /run/slurmdbd.pid
  SlurmUser: slurm

slurm_database_user: slurm
slurm_database_user_password: "{{ mariadb_password_slurm }}"
slurm_database: 'slurm_acct_db'

#Mariadb for slurm accounting

mariadb_root_pass: "{{ mariadb_password_root }}"
mariadb_options:
  innodb_buffer_pool_size: 1073741824
  innodb_log_file_size: 67108864
  innodb_lock_wait_timeout: 900
mariadb_users:
  - name: "{{ slurm_database_user }}"
    password: "{{ slurm_database_user_password }}"
    priv: '{{ slurm_database }}.*:ALL'
mariadb_databases:
  - name: '{{ slurm_database }}'
