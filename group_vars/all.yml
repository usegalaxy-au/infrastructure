# append domain to ansible_hostname (from hosts file) for hostname variable
hostname: "{{ ansible_hostname }}.usegalaxy.org.au"

#List of users to install and setup /homes for
machine_users:
    - name: simon
      roles:
        - sudo
        - galaxy_admin
      key: files/keys/simon.pub
      email: "{{ simon_email }}"
    - name: nick
      roles:
        - sudo
        - galaxy_admin
      key: files/keys/nick.pub
      email: "{{ nick_email }}"
    - name: cat
      roles:
        - sudo
        - galaxy_admin
      key: files/keys/catherine.pub
      email: "{{ cat_email }}"
    - name: igor
      roles:
        - tiaas_admin
        - galaxy_admin
      key: files/keys/igor.pub
      email: "{{ igor_email }}"
    - name: mike
      roles:
        - galaxy_admin
      key: files/keys/mike.pub
      email: "{{ mike_email }}"
    - name: gareth
      roles:
        - galaxy_admin
      key: files/keys/gareth.pub
      email: "{{ gareth_email }}"
    - name: jenkins_bot
      roles:
        - sudo
        - galaxy_admin
      key: files/keys/jenkins_bot.pub
      email: "{{ jenkins_bot_email }}" # this is not a real email address and will cause issues if validation is required
    - name: nuwan
      roles:
        - sudo
        - galaxy_admin
      key: files/keys/nuwan.pub
      galaxy_admin: true
      email: "{{ nuwan_email }}"
    - name: justin
      roles:
        - sudo
        - galaxy_admin
      key: files/keys/justin.pub
      email: "{{ justin_email }}"
    - name: grace
      roles:
        - sudo
      key: files/keys/grace.pub
      email: "{{ grace_email }}"
    - name: cameron
      roles:
        - sudo
      key: files/keys/cameron.pub
      email: "{{ cameron_email }}"
    - name: anna
      roles:
        - tiaas_admin
      key: files/keys/anna.pub
      email: "{{ anna_email }}"
    - name: tom
      roles: []
      key: files/keys/tom.pub
      email: "{{ tom_email }}"
    - name: gavin
      roles:
        - sudo
        - galaxy_admin
      key: files/keys/gavin.pub
      email: "{{ gavin_email }}"
    - name: ollie
      roles:
        - sudo
      key: files/keys/ollie.pub
      email: "{{ ollie_email }}"

galaxy_user:
  name: galaxy
  shell: /bin/bash
  uid: "{{ galaxy_uid }}"
  group: galaxy
  gid: "{{ galaxy_gid }}"

#Common packages to install on all of our machines.
common_packages:
    - python-is-python3
    - vim
    - acl
    - git
    - build-essential
    - python3-dev
    - libcurl4-openssl-dev
    - libgnutls28-dev
    - libssl-dev
    - python3-virtualenv
    - python3-pip
    - htop
    - nfs-common
    - atop
    - speedometer
    - byobu
    - apt-transport-https
    - tar
    - bzip2
    - libgl1-mesa-glx
    - unzip
    - tree
    - python3-passlib
    - xfsprogs
    - jq

#Set pip to be pip3 by default - see roles/geerlingguy.pip/defaults/main.yml
pip_package: python3-pip

# cvmfs
cvmfs_role: client
galaxy_cvmfs_repos_enabled: true

galaxy_cvmfs_server_urls:
  - domain: galaxyproject.org
    #use_geoapi: yes
    urls:
      - "http://cvmfs1-mel0.gvl.org.au/cvmfs/@fqrn@"
      - "http://cvmfs1-psu0.galaxyproject.org/cvmfs/@fqrn@"
      - "http://cvmfs1-iu0.galaxyproject.org/cvmfs/@fqrn@"
      - "http://cvmfs1-tacc0.galaxyproject.org/cvmfs/@fqrn@"
      - "http://cvmfs1-ufr0.galaxyproject.eu/cvmfs/@fqrn@"

#sinfo and squeue configs
bashrc_env: |
  export SINFO_FORMAT="%24n %.14C %.8t"
  export SQUEUE_FORMAT="%8i %9P %.35j %.9T %8r %19S %.10M %.6m %.3C %.3N %.55Z"
  export SACCT_FORMAT="jobid%8,partition%9,jobname%30,alloccpus,elapsed,totalcpu,END,state,MaxRSS%12,ReqMem,NodeList%24"

# miniconda
miniconda_version: '4.12.0'
miniconda_mamba_version: '0.23.3'

miniconda_channels:
  - conda-forge
  - bioconda
  - defaults
miniconda_base_env_packages:
  - mamba="{{ miniconda_mamba_version }}"
  - conda="{{ miniconda_version }}"

# Monitoring
influx_url: stats.usegalaxy.org.au
grafana_server_url: "https://{{ influx_url }}:8086"
influx_salt: "{{ prod_queue_size_salt }}"

telegraf_agent_package_state: latest
telegraf_agent_package_method: repo
telegraf_agent_hostname: "{{ inventory_hostname }}"

# enable tools with 'test' tag for certain users
test_tool_users: "{{ machine_users | selectattr('email', 'defined') | map(attribute='email') | list + [anna_email] }}"

galaxy_config_file_src_dir: files/galaxy
galaxy_config_template_src_dir: templates/galaxy

# Job metrics configuration
galaxy_job_metrics_plugins:
  - type: core
  - type: cpuinfo
  - type: meminfo
  - type: env
    variables: 'HOSTNAME,SLURM_CPUS_ON_NODE,SLURM_JOB_ID'

pulsar_job_metrics_plugins: "{{ galaxy_job_metrics_plugins }}"

internal_ssh_keys:
  ubuntu_maintenance_key:
    private_key_content: "{{ vault_ubuntu_maintenance_key }}"
    public_key_src: files/keys/ubuntu_maintenance_key.pub
    user: ubuntu

# Golang
golang_version: '1.15.6' # default for role version 2.6.3
golang_install_dir: '/opt/go/{{ golang_version }}' # default for role version 2.6.3
golang_gopath: '/var/workspace-go'

# Singularity target version
singularity_version: "3.7.4"
singularity_go_path: "{{ golang_install_dir }}"

# docker
docker_install_compose: false
