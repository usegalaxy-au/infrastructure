group_packages:
  - make
  - python3-psycopg2
  - libbz2-dev
  - liblzma-dev # 'libbz2-dev', 'liblzma-dev' have not been necessary for galaxy setup prior to ubuntu 20.04
  - supervisor
  - postgresql-client

# Python 3 support
pip_virtualenv_command: /usr/bin/python3 -m virtualenv # usegalaxy_eu.certbot, usegalaxy_eu.tiaas2, galaxyproject.galaxy
certbot_virtualenv_package_name: python3-virtualenv # usegalaxy_eu.certbot

# Postgres
postgresql_objects_users:
  - name: galaxy
    password: "{{ galaxy_db_user_password }}"
postgresql_objects_databases:
  - name: galaxy
    owner: galaxy

# systemd
galaxy_systemd_mode: mule
galaxy_zergpool_listen_addr: 127.0.0.1:8080
galaxy_systemd_zergling_env: DRMAA_LIBRARY_PATH="/usr/lib/slurm-drmaa/lib/libdrmaa.so.1"
galaxy_systemd_reports: true
galaxy_config_perms: 0644

# Certbot
certbot_auto_renew_hour: "{{ 23 |random(seed=inventory_hostname)  }}"
certbot_auto_renew_minute: "{{ 59 |random(seed=inventory_hostname)  }}"
certbot_auth_method: --webroot
certbot_install_method: virtualenv
certbot_auto_renew: yes
certbot_auto_renew_user: root
certbot_environment: production
certbot_well_known_root: /srv/nginx/_well-known_root
certbot_share_key_users:
  - nginx
certbot_post_renewal: |
  systemctl restart nginx || true
## Moved to hostvars as can change for things.
## certbot_domains:
## - "{{ hostname }}"
certbot_agree_tos: --agree-tos

# NGINX
nginx_selinux_allow_local_connections: true
nginx_servers:
  - redirect-ssl
nginx_enable_default_server: false
nginx_ssl_servers:
  - galaxy
nginx_conf_http:
  client_max_body_size: 240g
  gzip_proxied: "any"
  gzip_static: "on" # The ngx_http_gzip_static_module module allows sending precompressed files with the ".gz" filename extension instead of regular files.
  gzip_vary: "on"
  gzip_min_length: 128
  gzip_comp_level: 6 # Tradeoff of better compression for slightly more CPU time.
  gzip_types: |
    text/plain
    text/css
    text/xml
    text/javascript
    application/javascript
    application/x-javascript
    application/json
    application/xml
    application/xml+rss
    application/xhtml+xml
    application/x-font-ttf
    application/x-font-opentype
    image/png
    image/svg+xml
    image/x-icon
nginx_ssl_role: usegalaxy_eu.certbot
nginx_conf_ssl_certificate: /etc/ssl/certs/fullchain.pem
nginx_conf_ssl_certificate_key: /etc/ssl/user/privkey-nginx.pem
create_nginx_htpasswd: true
nginx_conf_user: galaxy # the nginx-with-dynamic-module role uses this (though it is a var for galaxyproject.nginx)
nginx_upload_limit_rate: 0 # for nginx template: rate in bytes per second.  0 means no limit. (EU has '32k', US has no limit)

nginx_upload_module_url: https://swift.rc.nectar.org.au/v1/AUTH_377/galaxy_infrastructure/nginx/ngx_http_upload_module.so  # compatible with nginx 1.18.0
# miniconda
miniconda_prefix: "{{ galaxy_conda_prefix }}"

# singularity cache of galaxy user (this defaults to /home/galaxy/.singularity). Not to be confused with cache directory for built sif files in galaxy_config.galaxy.container_resolvers_conf
galaxy_user_singularity_cachedir: /mnt/singularity_data
galaxy_user_singularity_tmpdir: "{{ galaxy_user_singularity_cachedir }}/tmp"

# Galaxy
galaxy_manage_errordocs: yes
galaxy_errordocs_dest: "/etc/nginx/error"
galaxy_errordocs_server_name: "{{ galaxy_config.galaxy.galaxy_infrastructure_url }}"

galaxy_gravity_state_dir: "{{ (galaxy_mutable_data_dir, 'gravity') | path_join }}"

galaxy_tool_config_files:
  - "{{ galaxy_config_dir }}/tool_conf.xml"
  - "{{ galaxy_config_dir }}/nagios_tool_conf.xml"
  - "{{ galaxy_config_dir }}/local_tool_conf.xml"
  - "{{ galaxy_config_dir }}/tool_conf_interactive.xml"

galaxy_create_user: true
galaxy_separate_privileges: true
galaxy_manage_paths: true
galaxy_layout: root-dir
galaxy_root: /mnt/galaxy
galaxy_shed_tools_dir: "{{ galaxy_tools_indices_dir }}/shed_tools"
galaxy_config_style: yaml
galaxy_force_checkout: true

galaxy_australia_website: "https://site.usegalaxy.org.au"

galaxy_server_dir: "{{ galaxy_root }}/galaxy-app"
galaxy_venv_dir: "{{ galaxy_root }}/venv" # set this explicitly as it can fail when host/group variables are used out of the context of the galaxy role
galaxy_mutable_config_dir: "{{ galaxy_root }}/var"
galaxy_mutable_data_dir: "{{ galaxy_root }}"
galaxy_config_dir: "{{ galaxy_root }}/config"
galaxy_conda_prefix: "{{ galaxy_tools_indices_dir }}/tool_dependencies/_conda"
galaxy_conda_exec: mamba

galaxy_toolbox_filters_dir: "{{ galaxy_server_dir }}/lib/galaxy/tools/toolbox/filters"

galaxy_config_file: "{{ galaxy_config_dir }}/galaxy.yml"

galaxy_extra_privsep_dirs:
  - "{{ galaxy_config_dir }}/mail"
  - "{{ galaxy_config_dir }}/tool_panel_filters"
  - "{{ galaxy_config_dir }}/themes"

tpv_version: "2.3.2"

tpv_packages: |
  {{ tpv_version is defined | ternary(['total-perspective-vortex==' + tpv_version|d('X')], []) }}

additional_packages:
  - redis
  - flower
  - watchdog==2.2.1

galaxy_additional_venv_packages: "{{ tpv_packages + additional_packages }}"

galaxy_process_env:  # environment variables for gunicorn and handlers processes
  VIRTUAL_ENV: "{{ galaxy_venv_dir }}"
  DRMAA_LIBRARY_PATH: "/usr/lib/slurm-drmaa/lib/libdrmaa.so.1"
  SINGULARITY_CACHEDIR: "{{ galaxy_user_singularity_cachedir }}"
  SINGULARITY_TMPDIR: "{{ galaxy_user_singularity_tmpdir }}"

#########################################
# group_galaxy_config contains variables for galaxy_config that can be overridden by variables in host_galaxy_config (defined in host_vars)
# host specific variables such as admin_users, brand, database_connection, id_secret and galaxy_infrastructure_url are in host_galaxy_config
# variables are set in group_galaxy_config if they are variables used on all hosts or are sensible defaults
#
# **As we migrate to 22.05 we will need to put the uwsgi/gunicorn/gravity sections into the individual hostvars files.**
#
#########################################
group_galaxy_config:
  galaxy:
    check_migrate_tools: false
    log_level: TRACE
    new_file_path: "{{ galaxy_tmp_dir }}/scratch"
    job_working_directory: "{{ galaxy_job_working_directory }}"
    allow_user_impersonation: true
    allow_user_deletion: true
    allow_path_paste: true
    use_interactive: false
    expose_dataset_path: true
    enable_unique_workflow_defaults: true
    track_jobs_in_database: true
    use_heartbeat: true
    allow_user_dataset_purge: true
    enable_quotas: true
    outputs_to_working_directory: true # disable in job confs for all pulsars
    enable_tool_recommendations: true
    expose_potentially_sensitive_job_metrics: true
    load_tool_shed_datatypes: false # Recommended by @Marius as __DATA_FETCH__ tool was stalling.

    static_enabled: true
    show_welcome_with_login: false
    error_email_to: "help@genome.edu.au" # error reports are disabled if no email is set
    email_from: <galaxy-no-reply@usegalaxy.org.au>
    galaxy_infrastructure_url: "{{ galaxy_infrastructure_url }}"
    support_url: "{{ galaxy_australia_website }}/help"
    terms_url: "{{ galaxy_australia_website }}/about#terms-of-service"
    email_domain_blocklist_file: "{{ galaxy_config_dir }}/email_domain_blocklist.conf"

    data_dir: "{{ galaxy_root }}/cache" # cache paths are set relative to data_dir (cache_dir will become a config option in 21.05)

    conda_prefix: "{{ galaxy_conda_prefix }}"

    cleanup_job: onsuccess # default is always
    retry_job_output_collection: 10

    heartbeat_log: "{{ galaxy_tmp_dir }}/heartbeat_{server_name}.log"
    heartbeat_interval: -1 # this disables automatic heartbeat logging (manual logging is still an option)

    database_engine_option_max_overflow: 50 # default is 10
    database_engine_option_pool_size: 20 # default is 5

    install_database_connection: "sqlite:///{{ galaxy_mutable_config_dir }}/galaxy_install_db.sqlite?isolation_level=IMMEDIATE"

    tool_dependency_dir: "{{ galaxy_tools_indices_dir }}/tools"

    job_config_file: "{{ galaxy_config_dir }}/job_conf.xml"
    tool_sheds_config_file: "{{ galaxy_config_dir }}/tool_sheds_conf.xml"
    user_preferences_extra_conf_path: "{{ galaxy_config_dir }}/user_preferences_extra_conf.yml"
    file_sources_config_file: "{{ galaxy_config_dir }}/file_sources_conf.yml"

    galaxy_data_manager_data_path: "{{ galaxy_custom_indices_dir }}"
    shed_tool_data_path: "{{ galaxy_tools_indices_dir }}/tool-data/shed_tool_data"
    tool_data_path: "{{ galaxy_tools_indices_dir }}/tool-data"
    tool_data_table_config_path: "{{ galaxy_mutable_config_dir }}/shed_tool_data_table_conf.xml,/cvmfs/data.galaxyproject.org/byhand/location/tool_data_table_conf.xml,/cvmfs/data.galaxyproject.org/managed/location/tool_data_table_conf.xml"
    library_import_dir: "{{ galaxy_tmp_dir }}/library_import_dir"
    cluster_files_directory: "{{ galaxy_tmp_dir }}/pbs"
    short_term_storage_dir: "{{ galaxy_tmp_dir }}/short_term_web_storage"

    templates_dir: "{{ galaxy_config_dir }}"

    sanitize_allowlist_file: "{{ galaxy_mutable_config_dir }}/sanitize_allowlist.txt"

    nginx_x_accel_redirect_base: /_x_accel_redirect

    statsd_host: localhost
    statsd_port: 8125
    statsd_prefix: galaxy-aust

    display_servers: hgw1.cse.ucsc.edu,hgw2.cse.ucsc.edu,hgw3.cse.ucsc.edu,hgw4.cse.ucsc.edu,hgw5.cse.ucsc.edu,hgw6.cse.ucsc.edu,hgw7.cse.ucsc.edu,hgw8.cse.ucsc.edu,lowepub.cse.ucsc.edu
    builds_file_path: /cvmfs/data.galaxyproject.org/managed/location/builds.txt
    build_sites_config_file: "{{ galaxy_config_dir }}/build_sites.yml"
    enable_old_display_applications: true

    dependency_resolvers:
      - type: tool_shed_packages
      - type: galaxy_packages
      - type: conda
        exec: "{{ galaxy_conda_prefix }}/bin/{{ galaxy_conda_exec|d('conda') }}"
      - type: galaxy_packages
        versionless: true
      - type: conda
        exec: "{{ galaxy_conda_prefix }}/bin/{{ galaxy_conda_exec|d('conda') }}"
        versionless: true

    container_resolvers:
      - type: explicit
      - type: cached_explicit_singularity
        cache_directory: "{{ galaxy_tools_indices_dir }}/cache/singularity"
      - type: explicit_singularity
        cache_directory: "{{ galaxy_tools_indices_dir }}/cache/singularity"
      - type: cached_mulled_singularity
        cache_directory: "{{ galaxy_tools_indices_dir }}/cache/singularity"
      - type: mulled_singularity
        cache_directory: "{{ galaxy_tools_indices_dir }}/cache/singularity"
      - type: build_mulled_singularity
        cache_directory: "{{ galaxy_tools_indices_dir }}/cache/singularity"
        auto_install: false

    # Taken from usegalaxy.org
    tool_name_boost: 0.1
    tool_section_boost: 1
    tool_description_boost: 0.1
    tool_label_boost: 1
    tool_stub_boost: 1
    tool_help_boost: 1
    tool_search_limit: 160

    # amqp_internal_connection: 'pyamqp://galaxy_internal:more_queues@localhost:5672/galaxy_internal' # this needs configuration

    # data_manager_config_file: /mnt/galaxy-app/config/data_manager_conf.xml.sample  # should we be templating these?

    # migrated_tools_config: /mnt/galaxy/var/migrated_tools_conf.xml
    # datatypes_config_file: /mnt/galaxy-app/config/datatypes_conf.xml

    # interactive_environment_plugins_directory: config/plugins/interactive_environments

    # dynamic_proxy_prefix: galaxy/gie_proxy
    # dynamic_proxy_external_proxy: true
    # dynamic_proxy_debug: true
    # dynamic_proxy_manage: false
    #
    # use_pbkdf2: false
    # smtp_server: localhost
    # set_metadata_externally: true
    # retry_metadata_internally: true

    # ftp_upload_dir: /mnt/ftp/galaxy_prod  # prob not relevant to dev, or if we want this for dev we need to configure something
    # ftp_upload_site: 'ftp.usegalaxy.org.au'
    # enable_openid: true
    # slow_query_log_threshold: .5

    # collect_outputs_from: job_working_directory # surely this is not a real path?  Relative to something?
    # rsync_url: 'rsync://scofield.bx.psu.edu/indexes'
    # len_file_path: /mnt/galaxy-app/tool-data/len

# galaxy_config_template_src_dir: templates/galaxy  ## this var has been moved to all.yml
group_galaxy_config_templates:
  # - src: "{{ galaxy_config_template_src_dir }}/static/welcome.html.j2"
  #   dest: "{{ galaxy_server_dir }}/static/welcome.html"
  - src: "{{ galaxy_config_template_src_dir }}/config/reports.yml.j2"
    dest: "{{ galaxy_config_dir }}/reports.yml"
  - src: "{{ galaxy_config_template_src_dir }}/config/tool_conf_interactive.xml.j2"
    dest: "{{ galaxy_config_dir }}/tool_conf_interactive.xml"
  - src: "{{ galaxy_config_template_src_dir }}/config/pulsar_app.yml.j2"
    dest: "{{ galaxy_config_dir }}/pulsar_app.yml"
  - src: "{{ galaxy_config_template_src_dir }}/config/oidc_backends_config.xml.j2"
    dest: "{{ galaxy_config_dir}}/oidc_backends_config.xml"

galaxy_config_templates: "{{ group_galaxy_config_templates + host_galaxy_config_templates|d([]) }}"

# galaxy_config_file_src_dir: files/galaxy  ## this var has been moved to all.yml
group_galaxy_config_files:
  - src: "{{ galaxy_config_file_src_dir }}/config/tool_sheds_conf.xml"
    dest: "{{ galaxy_config['galaxy']['tool_sheds_config_file'] }}"
  - src: "{{ galaxy_config_file_src_dir }}/config/tool_conf.xml"
    dest: "{{ galaxy_config_dir }}/tool_conf.xml"
  - src: "{{ galaxy_config_file_src_dir }}/config/nagios_tool_conf.xml"
    dest: "{{ galaxy_config_dir }}/nagios_tool_conf.xml"
  - src: "{{ galaxy_config_file_src_dir }}/config/local_tool_conf.xml"
    dest: "{{ galaxy_config_dir }}/local_tool_conf.xml"
  - src: "{{ galaxy_config_file_src_dir }}/config/user_preferences_extra_conf.yml"
    dest: "{{ galaxy_config['galaxy']['user_preferences_extra_conf_path'] }}"
  - src: "{{ galaxy_config_file_src_dir }}/config/build_sites.yml"
    dest: "{{ galaxy_config_dir }}/build_sites.yml"
  - src: "{{ galaxy_config_file_src_dir }}/config/file_sources_conf.yml"
    dest: "{{ galaxy_config_dir }}/file_sources_conf.yml"
  - src: "{{ galaxy_config_file_src_dir }}/config/oidc_config.xml"
    dest: "{{ galaxy_config_dir}}/oidc_config.xml"
  - src: "{{ galaxy_config_file_src_dir }}/config/email_domain_blocklist.conf"
    dest: "{{ galaxy_config_dir }}/email_domain_blocklist.conf"
  # - src: "{{ galaxy_config_file_src_dir }}/config/themes/themes_main.yml"
  #   dest: "{{ galaxy_config_dir }}/themes/themes_main.yml"
  # - src: "{{ galaxy_config_file_src_dir }}/config/themes/themes_genome.yml"
  #   dest: "{{ galaxy_config_dir }}/themes/themes_genome.yml"
  # - src: "{{ galaxy_config_file_src_dir }}/config/themes/themes_proteomics.yml"
  #   dest: "{{ galaxy_config_dir }}/themes/themes_proteomics.yml"
  - src: "{{ galaxy_config_file_src_dir }}/images/au/favicon/favicon.ico"
    dest: "{{ galaxy_server_dir }}/static/favicon.ico"

galaxy_config_files: "{{ group_galaxy_config_files + host_galaxy_config_files|d([]) }}"

# galaxy_config is the combination of group_galaxy_config and host_galaxy_config.  For any variable
# defined in both group_galaxy_config and host_galaxy_config the value from host_galaxy_config will
# be used.
galaxy_config: "{{ group_galaxy_config | combine(host_galaxy_config | default({}), recursive=True) }}"

# TUS
galaxy_tusd_port: 1080
tusd_version: 'v1.10.0'

# Slurm client
slurm_roles: ["exec"]

#Add slurm controllers hostname to hosts.
add_hosts_head: yes
add_hosts_workers: yes
is_galaxy_head_node: yes  # flag for common role

#TIaaS Config
tiaas_dir: /opt/tiaas
tiaas_user: tiaas
tiaas_group: tiaas
tiaas_version: main
tiaas_admin_user: admin
tiaas_admin_pass: "{{ tiaas_password }}"
tiaas_galaxy_stylesheet: "{{ galaxy_server_dir }}/static/dist/base.css"

# Interactive Tools
docker_install_compose: false
docker_users:
  - "{{ galaxy_user.name }}"

gie_proxy_ip: 127.0.0.1
gie_proxy_port: 8000
# all gie variables below can be removed if galaxy-gie-proxy role is no longer being run
gie_proxy_dir: "{{ galaxy_root }}/gie-proxy/proxy"
gie_proxy_git_version: main
gie_proxy_setup_nodejs: nodeenv
gie_proxy_virtualenv_command: "{{ pip_virtualenv_command }}"
gie_proxy_nodejs_version: "10.13.0"
gie_proxy_virtualenv: "{{ galaxy_root }}/gie-proxy/venv"
gie_proxy_setup_service: systemd
gie_proxy_sessions_path: "{{ galaxy_mutable_data_dir }}/interactivetools_map.sqlite"

# Telegraf extra stuff for statsd
telegraf_plugins_extra:
  listen_galaxy_routes:
    plugin: "statsd"
    config:
      - service_address = ":8125"
      - metric_separator = "."

# lsyncd
lsyncd_source: /mnt/galaxy
lsyncd_target: /mnt/ghost-galaxy-app
lsyncd_exclude:
  - cache
lsyncd_max_user_watches: 524288

# debugging settings
debug:
  # determines whether to enable memray debugging. Memray process must be manually started on port 8082
  memray:
    weight: 0

# dirs for nginx logs
nginx_log_olddir_root: /var/log/nginx/olddir
nginx_long_term_log_dir: /mnt/var/log/nginx
