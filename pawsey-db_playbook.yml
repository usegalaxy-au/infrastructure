- hosts: pawsey_db_server
  become: true
  vars_files:
      - group_vars/all.yml
      - group_vars/pawsey.yml
      - group_vars/VAULT
      - group_vars/dbservers.yml
      - host_vars/pawsey-db.usegalaxy.org.au.yml
      - secret_group_vars/stats_server_vault
  pre_tasks:
      - name: Attach volume to instance
        include_role:
          name: attached-volumes
      - name: Install psycopg2 for python3
        apt:
            name: python3-psycopg2
            state: present
        become: true
  roles:
      - common
      - insspb.hostname
      - geerlingguy.pip
      - galaxyproject.postgresql
      - dj-wasabi.telegraf
  post_tasks:
      - name: stat data directory
        stat:
          path: "{{ postgresql_pgdata }}"
        register: data_dir
      - name: move the data directory
        block:
          - name: get postgresql version string
            shell: pg_config --version
            register: version_string
          - name: set postgresql version major
            set_fact:
              postgresql_version_major: "{{ version_string | regex_findall('PostgreSQL ([0-9]+).') | first }}"
          - name: stop postgres
            systemd:
              name: postgresql
              state: stopped
          - name: Create data directory
            file:
              path: "{{ postgresql_pgdata }}"
              state: directory
              mode: 0700
              owner: postgres
              group: postgres
          - name: Run initdB
            command: 
              cmd: "/usr/lib/postgresql/{{ postgresql_version_major }}/bin/initdb -D {{ postgresql_pgdata }}"
            become: true
            become_user: postgres
          - name: Start postgresql with -D data_directory
            command:
              cmd: "/usr/lib/postgresql/{{ postgresql_version_major }}/bin/pg_ctl -D {{ postgresql_pgdata }} start"
            become: true
            become_user: postgres
          - name: override postgresql_objects_privileges since there are not any tables yet
            set_fact:
              postgresql_objects_privileges: []
        when: not data_dir.stat.exists
      - name: run postgresql objects role
        import_role:
          name: natefoo.postgresql_objects
        become: true
        become_user: postgres