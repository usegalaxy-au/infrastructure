---
- name: Make sure pip is available
  package:
    name: python3-pip
    state: present

- name: Ensure influxdb is available
  pip:
    name: influxdb
    state: latest

- name: Check need to create admin
  command: |
    influx {% if influxdb_ssl %}-ssl{% endif %} -host "{{ hostname }}" -execute "show users"
  ignore_errors: true
  register: should_create_admin
  when: not ansible_check_mode

- name: Create initial admin user
  command: |
    influx {% if influxdb_ssl %}-ssl{% endif %} -host "{{ hostname }}" -execute "CREATE USER {{ influxdb.admin.username }} WITH PASSWORD '{{ influxdb.admin.password }}' WITH ALL PRIVILEGES"
  when: 'not ansible_check_mode and "unable to parse authentication credentials" not in should_create_admin.stdout'

- name: Create users
  influxdb_user:
    user_name: "{{ item.username }}"
    user_password: "{{ item.password }}"
    # Auth
    username: "{{ influxdb.admin.username }}"
    password: "{{ influxdb.admin.password }}"
    hostname: "{{ hostname }}"
    ssl: "{{ influxdb_ssl }}"
    validate_certs: "{{ influxdb_validate_certs }}"
    use_udp: no
    udp_port: 4444
  with_items:
    - "{{ influxdb.node }}"
    - "{{ influxdb.grafana }}"
    
- name: Create database using custom credentials
  influxdb_database:
    database_name: "{{ item }}"
    # Auth
    username: "{{ influxdb.admin.username }}"
    password: "{{ influxdb.admin.password }}"
    hostname: "{{ hostname }}"
    ssl: "{{ influxdb_ssl }}"
    validate_certs: "{{ influxdb_validate_certs }}"
    use_udp: no
    udp_port: 4444
  with_items: "{{ influxdb_databases }}"

- name: create 2 week retention policy
  influxdb_retention_policy:
    database_name: "{{ item }}"
    policy_name: oneweek
    duration: 14d
    replication: 1
    default: true
    # Auth
    username: "{{ influxdb.admin.username }}"
    password: "{{ influxdb.admin.password }}"
    hostname: "{{ hostname }}"
    ssl: "{{ influxdb_ssl }}"
    validate_certs: "{{ influxdb_validate_certs }}"
    use_udp: no
    udp_port: 4444
  with_items: "{{ retention_policy_dbs }}"
  when: not ansible_check_mode # This task is not safe if DB doesn't exist.

- name: Grant permissions to galaxy
  influxdb_query:
    database_name: "{{ item }}"
    query: "GRANT ALL ON \"{{ item }}\" TO {{ influxdb.node.username }}"
    # Auth
    username: "{{ influxdb.admin.username }}"
    password: "{{ influxdb.admin.password }}"
    hostname: "{{ hostname }}"
    ssl: "{{ influxdb_ssl }}"
    validate_certs: "{{ influxdb_validate_certs }}"
    use_udp: no
    udp_port: 4444
  with_items: "{{ influxdb_databases }}"
  when: not ansible_check_mode # This task is not safe if DB doesn't exist.

- name: Pause to allow influx _internal db to be registered (in case of new installation)
  pause:
    seconds: 10

- name: Grant permissions to grafana
  influxdb_query:
    database_name: "{{ item }}"
    query: "GRANT READ ON \"{{ item }}\" TO {{ influxdb.grafana.username }}"
    # Auth
    username: "{{ influxdb.admin.username }}"
    password: "{{ influxdb.admin.password }}"
    hostname: "{{ hostname }}"
    ssl: "{{ influxdb_ssl }}"
    validate_certs: "{{ influxdb_validate_certs }}"
    use_udp: no
    udp_port: 4444
  with_items: ["{{ influxdb_databases }}", '_internal']
  when: not ansible_check_mode # This task is not safe if DB doesn't exist.