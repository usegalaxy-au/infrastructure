---
- name: Update the apt repos and base OS
  apt:
      upgrade: dist
      update_cache: yes
  become: yes
  become_user: root

- name: Install some common packages
  apt:
      name: "{{ common_packages }}"
      state: latest
  become: yes
  become_user: root

- name: Install group specific packages
  apt:
      name: "{{ group_packages }}"
      state: latest
  become: yes
  become_user: root
  when: group_packages is defined

- name: Add external ips to hosts
  block:
    - name: Add to head node to all worker's hosts files
      become: yes
      become_user: root
      lineinfile:
          path: "/etc/hosts"
          #regexp: "{{ hostvars[item].ansible_host }}\t{{ hostvars[item]['ansible_hostname']}}\t{{ hostvars[item]['ansible_hostname']}}"
          line: "{{ hostvars[item].ansible_ssh_host }}\t{{ item }}"
          state: present
          backup: yes
      when: add_hosts_head is defined and add_hosts_head == true
      with_items:
          "{{ head_nodes }}"

    - name: Add to worker nodes to head node's host file
      become: yes
      become_user: root
      lineinfile:
          path: "/etc/hosts"
          #regexp: "{{ hostvars[item]['ansible_env'].SSH_CONNECTION.split(' ')[2] }}\t{{ hostvars[item]['ansible_hostname']}}\t{{ hostvars[item]['ansible_hostname']}}"
          line: "{{ hostvars[item].ansible_ssh_host }}\t{{ item }}"
          state: present
          backup: yes
      when: add_hosts_workers is defined and add_hosts_workers == true
      with_items:
          "{{ worker_nodes }}"

    - name: Add Galaxy server to all worker's host files
      become: yes
      become_user: root
      lineinfile:
          path: "/etc/hosts"
          line: "{{ hostvars[item].ansible_ssh_host }}\t{{ item }}"
          state: present
          backup: yes
      when: add_hosts_galaxy is defined and add_hosts_galaxy == true
      with_items:
          "{{ galaxy_nodes }}"
  when: use_internal_ips is not defined or use_internal_ips == false

- name: Add internal ips to hosts
  block:
    - name: Add to head node to all worker's hosts files
      become: yes
      become_user: root
      lineinfile:
          path: "/etc/hosts"
          #regexp: "{{ hostvars[item].ansible_host }}\t{{ hostvars[item]['ansible_hostname']}}\t{{ hostvars[item]['ansible_hostname']}}"
          #line: "{{ hostvars[item].ansible_ssh_host }}\t{{ item }}"
          line: "{{ hostvars[item].internal_ip }}\t{{ item }}" #Altered due to issues with internal network. Please put back once fixed
          state: present
          backup: yes
      when: add_hosts_head is defined and add_hosts_head == true
      with_items:
          "{{ head_nodes }}"

    - name: Add to worker nodes to head node's host file
      become: yes
      become_user: root
      lineinfile:
          path: "/etc/hosts"
          #regexp: "{{ hostvars[item]['ansible_env'].SSH_CONNECTION.split(' ')[2] }}\t{{ hostvars[item]['ansible_hostname']}}\t{{ hostvars[item]['ansible_hostname']}}"
          line: "{{ hostvars[item].internal_ip }}\t{{ item }}"
          state: present
          backup: yes
      when: add_hosts_workers is defined and add_hosts_workers == true
      with_items:
          "{{ worker_nodes }}"

    - name: Add Galaxy server to all worker's host files
      become: yes
      become_user: root
      lineinfile:
          path: "/etc/hosts"
          #line: "{{ hostvars[item].ansible_ssh_host }}\t{{ item }}"
          line: "{{ hostvars[item].internal_ip }}\t{{ item }}" #Altered due to issues with internal network. Please put back once fixed.
          state: present
          backup: yes
      when: add_hosts_galaxy is defined and add_hosts_galaxy == true
      with_items:
          "{{ galaxy_nodes }}"
  when: use_internal_ips is defined and use_internal_ips == true

- name: Add Galaxy group to relevant machines
  become: yes
  become_user: root
  group:
      name: "{{ galaxy_user.name }}"
      gid: "{{ galaxy_user.gid }}"
  when: add_galaxy_user is defined and add_galaxy_user == true

- name: Add Galaxy user to relevant machines
  become: yes
  become_user: root
  user:
      name: "{{ galaxy_user.name }}"
      uid: "{{ galaxy_user.uid}}"
      group: "{{ galaxy_user.group }}"
      shell: /bin/bash
  when: add_galaxy_user is defined and add_galaxy_user == true

- name: Add ssl key if required
  include_tasks: ssl_key.yml
  when: create_ssh_key is defined and create_ssh_key == true

- name: Add machine users
  import_tasks: machine_users.yml

- name: Add extra ssh keys
  include_tasks: extra_keys.yml
  loop: "{{ extra_keys }}"
  loop_control:
    loop_var: extra_key

- name: Make sure cloud configured hostname control is not present
  file:
    path: /etc/cloud/cloud.cfg.d/07_hostnamefix.cfg
    state: absent
  become: yes
  become_user: root

- name: Create a nginx .htpasswd file if required
  htpasswd:
    path: /etc/nginx/.htpasswd
    name: "{{ htpass_username }}"
    password: "{{ htpass_password }}"
    owner: root
    group: galaxy
    mode: 0640
  when: create_nginx_htpasswd is defined and create_nginx_htpasswd == true