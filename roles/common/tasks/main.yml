---
- name: Adjust systemwide ulimits
  import_tasks: ulimits.yml

- name: Add hosts to hosts template file
  import_tasks: add_hosts.yml
  vars:
    hosts_filename: "{{ hosts_template_file }}"
  when: hosts_template_file is defined

- name: Add Influx apt repository key (pre ubuntu 22.04)
  ansible.builtin.apt_key:
    url: https://repos.influxdata.com/influxdata-archive_compat.key
    state: present
  when: ansible_distribution == "Ubuntu" and (ansible_distribution_version is version('22.04', '<'))

- name: Update the apt repos and base OS
  apt:
      upgrade: dist
      update_cache: yes
  when: not skip_upgrade_dist|d(false)

- name: Adjust packages for Ubuntu 24.04 and later
  set_fact:
      ubuntu_packages: "{{ (common_packages | difference(problematic_packages_ubuntu_24_04)) | union(additional_packages_ubuntu_24_04) }}"
  when: ansible_distribution == "Ubuntu" and (ansible_distribution_version is version('24.04', '>='))

- name: Install some common packages
  apt:
      name: "{{ ubuntu_packages | default(common_packages) }}"
      state: latest

- name: Install group specific packages
  apt:
      name: "{{ group_packages }}"
      state: latest
  when: group_packages is defined

- name: Add hosts to /etc/hosts
  import_tasks: add_hosts.yml
  vars:
    hosts_filename: "/etc/hosts"

- name: Install python 3.11
  block:       
    - name: Add ppa
      apt_repository:
        repo: ppa:deadsnakes/ppa
        state: present  
    - name: Install python 3.11
      apt:
        name:
          - python3.11
          - python3.11-venv
        state: present  
  when: ansible_distribution == "Ubuntu" and (ansible_distribution_version is version('22.04', '>='))

- name: Add Galaxy group to relevant machines
  group:
      name: "{{ galaxy_user.name }}"
      gid: "{{ galaxy_user.gid }}"
  when: add_galaxy_user is defined and add_galaxy_user == true

- name: Add Galaxy user to relevant machines
  user:
      name: "{{ galaxy_user.name }}"
      uid: "{{ galaxy_user.uid}}"
      group: "{{ galaxy_user.group }}"
      shell: /bin/bash
  when: add_galaxy_user is defined and add_galaxy_user == true

- name: Add GALAXY_CONFIG_FILE env var to galaxy user's .bashrc
  lineinfile:
      line: "export GALAXY_CONFIG_FILE={{ galaxy_config_file }}"
      path: /home/galaxy/.bashrc
      owner: galaxy
      group: galaxy
  when: add_galaxy_user is defined and galaxy_config_file is defined

- name: Add ssl key if required
  include_tasks: ssl_key.yml
  when: create_ssh_key is defined and create_ssh_key == true

- name: Add machine users
  import_tasks: machine_users.yml
  tags:
    - users

- name: Add variables to bashrc files
  import_tasks: bashrc.yml
  tags:
    - users

- name: Add extra ssh keys
  include_tasks: extra_keys.yml
  loop: "{{ extra_keys }}"
  loop_control:
    loop_var: extra_key

- name: Add ssh config
  import_tasks: ssh_config.yml
  when: ssh_config_hosts is defined

- name: Make sure cloud configured hostname control is not present
  file:
    path: /etc/cloud/cloud.cfg.d/07_hostnamefix.cfg
    state: absent

- name: Create a nginx .htpasswd file if required
  htpasswd:
    path: /etc/nginx/.htpasswd
    name: "{{ htpass_username }}"
    password: "{{ htpass_password }}"
    owner: root
    group: galaxy
    mode: 0640
  when: create_nginx_htpasswd is defined and create_nginx_htpasswd == true

- name: Disable Apport service to prevent coredumps
  systemd:
    name: "apport"
    state: "stopped"
    enabled: false
  ignore_errors: True

- name: set SACCT_FORMAT for root user
  lineinfile:
    path: /etc/environment
    create: true
    line: export SACCT_FORMAT="{{ common_sacct_format }}"
