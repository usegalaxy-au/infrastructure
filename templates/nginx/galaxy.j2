map $http_referer $log_lab {
    # It is a subdomain of dev.gvl.org.au or usegalaxy.org.au
    default 0;
    ~*://[^/]+\.(usegalaxy|dev\.gvl)\.org\.au 1;
}
map $request $log_tool_click {
    default 0;
    ~*/api/tools/toolshed.+build 1;
}
map $request $log_welcome {
    default 0;
    ~*/welcome 1;
}
map "$log_lab:$log_welcome" $log_lab_welcome {
    default 0;
    "1:1" 1;
}
map "$log_lab:$log_tool_click" $log_lab_tool {
    default 0;
    "1:1" 1;
}

upstream galaxy {
{% set num_gunicorn_processes = galaxy_config.gravity.gunicorn | length %}
{% for gunicorn_process in galaxy_config.gravity.gunicorn %}
    server {{ gunicorn_process.bind }} weight={{ (100-debug.memray.weight / galaxy_config.gravity.gunicorn|length) | int }};
{% endfor %}
{% if debug.memray.weight > 0 %}
    server localhost:8082 weight={{ debug.memray.weight | int }};
{% endif %}
}

server {
    # Listen on port 443
    listen        *:443 ssl default_server;
    # The virtualhost is our domain name
    server_name   "{{ hostname }}";

    # Our log files will go here.
    access_log  /var/log/nginx/access.log;
    error_log   /var/log/nginx/error.log;
    sendfile    on;

    # Special log files for Galaxy Labs
    access_log /var/log/nginx/labs-welcome.access.log combined if=$log_lab_welcome;
    access_log /var/log/nginx/labs-tools.access.log combined if=$log_lab_tool;

    uwsgi_buffer_size 16k;
    uwsgi_busy_buffers_size 24k;

    # The most important location block, by default all requests are sent to Gunicorn
    location / {
        proxy_pass         http://galaxy;
        proxy_redirect     off;
        proxy_set_header   Host              $host;
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
        
        add_header X-Clacks-Overhead 'GNU James Taylor (@jxtx) Simon Gladman (@slugger70)';

        # For DEBUGGING ONLY, remove when confirmed working:
        add_header X-Lab $log_lab;
        add_header X-ToolClick $log_tool_click;
        add_header X-Welcome $log_welcome;
        add_header X-LabWelcome $log_lab_welcome;
        add_header X-LabTool $log_lab_tool;
    }

    location ~ ^/api/dataset_collections/([^/]+)/download/?$ {
        proxy_buffering off;
        proxy_pass http://galaxy;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
    }

    # Static files can be more efficiently served by Nginx. Why send the
    # request to uWSGI which should be spending its time doing more useful
    # things like serving Galaxy!
    location /static {
        alias {{ galaxy_server_dir }}/static;
        expires 24h;
    }

{% if galaxy_subsite_nginx_routes is defined %}

    {{ galaxy_subsite_nginx_routes }}

{% else %}

    # In Galaxy instances started with run.sh, many config files are
    # automatically copied around. The welcome page is one of them. In
    # production, this step is skipped, so we will manually alias that.
    location /static/welcome.html {
        alias {{ galaxy_server_dir }}/static/welcome.html;
        expires 24h;
    }
{% endif %}

    # serve visualization and interactive environment plugin static content
    location ~ ^/plugins/(?<plug_type>[^/]+?)/((?<vis_d>[^/_]*)_?)?(?<vis_name>[^/]*?)/static/(?<static_file>.*?)$ {
        alias {{ galaxy_server_dir }}/config/plugins/$plug_type/;
        try_files $vis_d/${vis_d}_${vis_name}/static/$static_file
                  $vis_d/static/$static_file =404;
    }


    # Route all path-based interactive tool requests to the InteractiveTool proxy application
    location ~* ^/(interactivetool/.+)$ {
        proxy_redirect off;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_pass http://127.0.0.1:{{ gie_proxy_port }};
    }

    location /_x_accel_redirect/ {
        internal;
        alias /;
        add_header X-Frame-Options SAMEORIGIN;
        add_header X-Content-Type-Options nosniff;
    }

    location /training-material/ {
        proxy_pass https://training.galaxyproject.org/training-material/;
    }

    location /robots.txt {
        alias {{ galaxy_server_dir }}/static/robots.txt;
    }

    location /favicon.ico {
        alias {{ galaxy_server_dir }}/static/favicon.ico;
    }

{% if galaxy_config.gravity.reports is defined %}
    location /reports/ {
        proxy_pass http://{{ galaxy_config.gravity.reports.bind }}:/;
        auth_basic "Restricted Content";
        auth_basic_user_file /etc/nginx/.htpasswd;
    }
{% endif %}

    location /tiaas {
        proxy_pass            http://unix:/run/tiaas.sock;
        proxy_redirect        off;
        proxy_set_header      Host                 $host;
        proxy_set_header      X-Real-IP            $remote_addr;
        proxy_set_header      X-Forwarded-For      $proxy_add_x_forwarded_for;
        proxy_hide_header     X-Frame-Options;
        proxy_read_timeout    600;  # seconds
    }

    location /join-training {
        proxy_pass            http://unix:/run/tiaas.sock;
        proxy_redirect        off;
        proxy_set_header      Host                 $host;
        proxy_set_header      X-Real-IP            $remote_addr;
        proxy_set_header      X-Forwarded-For      $proxy_add_x_forwarded_for;
        proxy_hide_header     X-Frame-Options;
        proxy_read_timeout    600;  # seconds
    }

    location /tiaas/static {
        alias /opt/tiaas/static;
    }

    location /api/upload/resumable_upload {
        # Disable request and response buffering
        proxy_request_buffering     off;
        proxy_buffering             off;
        proxy_http_version          1.1;

        # Add X-Forwarded-* headers
        proxy_set_header X-Forwarded-Host   $host;
        proxy_set_header X-Forwarded-Proto  $scheme;

        proxy_set_header Upgrade            $http_upgrade;
        proxy_set_header Connection         "upgrade";
        client_max_body_size        0;
        proxy_pass http://localhost:{{ galaxy_tusd_port }}/files;
    }

{% if galaxy_config['galaxy']['nginx_upload_job_files_store'] is defined %}

    location /_job_files {
        if ($request_method != POST) {
                rewrite "" /api/jobs/$arg_job_id/files last;
        }
        upload_store {{ galaxy_config['galaxy']['nginx_upload_job_files_store'] }};
        upload_limit_rate "{{ nginx_upload_limit_rate|d(0) }}";
        upload_store_access user:rw group:r all:r;
        upload_pass_form_field "";
        upload_set_form_field "__${upload_field_name}_path" "$upload_tmp_path";
        upload_pass_args on;
        upload_buffer_size 16M;
        upload_pass /_upload_job_files_done;
    }

    location /_upload_job_files_done {
        internal;
        rewrite "" /api/jobs/$arg_job_id/files;
    }

{% endif %}

    # error docs
    error_page  502         /error/502/index.shtml;
    error_page  413         /error/413/index.html;
    location /error {
        ssi on;
        root /etc/nginx;
    }
}
