test_tool_users = ["{{ test_tool_users | join('", "') }}"]
test_tool_label = "test"

test_tools = [
    {
        'id': 'maxquant_test',
        'role': 'maxquant_test',
    },
]

restricted_ITs = ["interactive_tool_rstudio", "interactive_tool_jupyter_notebook"]
IT_roles = ["trusted_for_ITs"]

def hide_test_tools(context, tool):
    """
    hide tools with 'test' tag from all but selected_users
    """
    if hasattr(tool, 'labels') and test_tool_label in tool.labels:
        user = context.trans.user
        for test_tool in test_tools:
            if tool.id == test_tool['id']:
                return user is not None and (
                    user.email in test_tool_users or test_tool['role'] in [
                        r.name for r in user.all_roles() if not r.deleted
                    ]
                )
        return user is not None and user.email in test_tool_users
    return True

def restrict_alphafold(context, tool):
    """
    Only let GA team, alphafold beta users and UoM vet school alphafold users see alphafold
    """
    if tool.id.startswith('toolshed.g2.bx.psu.edu/repos/galaxy-australia/alphafold2/alphafold'):
        user = context.trans.user
        return user is not None and (
            user.email in test_tool_users or any([
                role for role in user.all_roles() if (
                    role.name in ['Alphafold', 'UoM_Vet_Alphafold'] and not role.deleted
        )]))
    return True

def restrict_interactive_tools(context, tool):
    """
    Show restricted interactive tools to users with specified roles
    """
    if hasattr(tool, 'id') and tool.id in restricted_ITs:
        user = context.trans.user
        return user is not None and any(
            [True for r in user.all_roles() if not r.deleted and (r.name in IT_roles or r.name.startswith('training'))]
        )
    return True
