# Specific settings for galaxy staging application/web server

# variables for attaching mounted volume to application server
attached_volumes:
  - device: /dev/vdb
    path: /mnt
    fstype: ext4

# total perspective vortex
tpv_version: '1.2.0'

certbot_domains:
- "{{ hostname }}"
- "*.interactivetoolentrypoint.interactivetool.{{ hostname }}"
certbot_dns_provider: cloudflare
certbot_dns_credentials:
  api_token: "{{ vault_dns_cloudflare_api_token }}"
dns-cloudflare-propagation-seconds: 60

nginx_ssl_servers:
  - galaxy
  - galaxy-gie-proxy

#gie proxy hostname
interactive_tools_server_name: "{{ hostname }}"

galaxy_db_user_password: "{{ vault_staging_db_user_password }}"

# NFS stuff
nfs_exports:
    - "{{ galaxy_root }}  *(rw,async,no_root_squash,no_subtree_check)"

# ansible-galaxy
galaxy_repo: https://github.com/galaxyproject/galaxy.git
galaxy_commit_id: release_22.01

galaxy_dynamic_job_rules_src_dir: files/galaxy/dynamic_job_rules/staging
galaxy_dynamic_job_rules_dir: "{{ galaxy_root }}/dynamic_job_rules"
galaxy_dynamic_job_rules:
  - dynamic_rules/destination_mapper.py
  - dynamic_rules/tool_destinations.yml
  - total_perspective_vortex/vortex_config.yml
  - readme.txt

galaxy_tools_indices_dir: "{{ galaxy_root }}"
galaxy_tmp_dir: "{{ galaxy_root }}/tmp"
galaxy_custom_indices_dir: "{{ galaxy_root }}/custom-indices"
galaxy_tus_upload_store: "{{ galaxy_tmp_dir }}/tus"

galaxy_file_path: "{{ galaxy_root }}/data"
nginx_upload_store_base_dir: "{{ galaxy_file_path }}/upload_store"
nginx_upload_store_dir: "{{ nginx_upload_store_base_dir }}/uploads"
nginx_upload_job_files_store_dir: "{{ nginx_upload_store_base_dir }}/job_files"

host_galaxy_config_templates:
  - src: "{{ galaxy_config_template_src_dir }}/config/oidc_backends_config.xml.j2"
    dest: "{{ galaxy_config_dir}}/oidc_backends_config.xml"
  - src: "{{ galaxy_config_template_src_dir }}/config/staging_job_conf.yml.j2"
    dest: "{{ galaxy_config_dir}}/job_conf.yml"
  - src: "{{ galaxy_config_template_src_dir }}/toolbox/filters/ga_filters.py.j2"
    dest: "{{ galaxy_server_dir }}/lib/galaxy/tools/toolbox/filters/ga_filters.py"

host_galaxy_config_files:
  - src: "{{ galaxy_config_file_src_dir }}/config/oidc_config.xml"
    dest: "{{ galaxy_config_dir}}/oidc_config.xml"

galaxy_handler_count: 2   ############# europe uses 5, this could be host specific

host_galaxy_config:  # renamed from __galaxy_config
  galaxy:
    admin_users: "{{ machine_users | selectattr('email', 'defined') | selectattr('roles', 'contains', 'galaxy_admin') | map(attribute='email') | join(',') }}"
    brand: "Australia Staging"
    database_connection: "postgresql://galaxy:{{ vault_staging_db_user_password }}@staging-db.usegalaxy.org.au:5432/galaxy"
    id_secret: "{{ vault_staging_id_secret }}"
    file_path: "{{ galaxy_file_path }}"
    galaxy_infrastructure_url: 'https://staging.usegalaxy.org.au'
    interactivetools_enable: true
    interactivetools_map: "{{ gie_proxy_sessions_path }}"
    enable_oidc: true
    oidc_config_file: "{{ galaxy_config_dir }}/oidc_config.xml"
    oidc_backends_config_file: "{{ galaxy_config_dir }}/oidc_backends_config.xml"
    job_config_file: "{{ galaxy_config_dir }}/job_conf.yml"
    # nginx upload module
    nginx_upload_store: "{{ nginx_upload_store_dir }}"
    nginx_upload_path: '/_upload'
    nginx_upload_job_files_store: "{{ nginx_upload_job_files_store_dir }}"
    nginx_upload_job_files_path: '/_job_files'
    watch_job_rules: true  # important for total perspective vortex
    enable_mulled_containers: true
    enable_beta_containers_interface: true
    tool_filters: ga_filters:hide_test_tools
    # TUS
    tus_upload_store: "{{ galaxy_tus_upload_store }}"

# TUS
tusd_instances:
  - name: main
    user: "{{ galaxy_user.name }}"
    group: "galaxy"
    args:
      - "-host=localhost"
      - "-port={{ galaxy_tusd_port }}"
      - "-upload-dir={{ galaxy_tus_upload_store }}"
      - "-hooks-http=https://{{ hostname }}/api/upload/hooks"
      - "-hooks-http-forward-headers=X-Api-Key,Cookie"

# cvmfs
cvmfs_cache_base: /mnt/var/lib/cvmfs

# vars for setting up .pgpass
pg_db_password:
  galaxy: "{{ vault_staging_db_user_password }}"
  reader: "{{ vault_staging_db_reader_password }}"
  tiaasadmin: "{{ vault_staging_db_tiaasadmin_password }}"
db_address: "staging-db.usegalaxy.org.au"
gxadmin_ubuntu_config_dir: /home/ubuntu/.config

# AAF specific settings
aaf_issuer_url: "{{ vault_aaf_issuer_url_staging }}"
aaf_client_id: "{{ vault_aaf_client_id_staging }}"
aaf_client_secret: "{{ vault_aaf_client_secret_staging }}"

# Docker
docker_users:
  - "{{ galaxy_user.name }}"
docker_daemon_options:
  data-root: /mnt/docker-data

# Singularity and docker volumes
slurm_singularity_volumes_list:
  - '$job_directory:rw'
  - '$galaxy_root:ro'
  - '$tool_directory:ro'
  - '$default_file_path:ro'
  - '/cvmfs/data.galaxyproject.org:ro'

pulsar_singularity_volumes_list:
  - '$job_directory:rw'
  - '$tool_directory:ro'
  - '/cvmfs/data.galaxyproject.org:ro'

slurm_docker_volumes_list: "{{ slurm_singularity_volumes_list }}"
pulsar_docker_volumes_list: "{{ pulsar_singularity_volumes_list }}"

# comma separated strings for the job conf
slurm_singularity_volumes: "{{ slurm_singularity_volumes_list | join(',') }}"
pulsar_singularity_volumes: "{{ pulsar_singularity_volumes_list | join(',') }}"
slurm_docker_volumes: "{{ slurm_docker_volumes_list | join(',') }}"
pulsar_docker_volumes: "{{ pulsar_docker_volumes_list | join(',') }}"

singularity_default_container_id: '/cvmfs/singularity.galaxyproject.org/all/python:3.8.3'
