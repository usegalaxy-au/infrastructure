# Specific settings for galaxy staging application/web server

# variables for attaching mounted volume to application server
attached_volumes:
  - device: /dev/vdb
    path: /mnt
    fstype: ext4

certbot_domains:
- "{{ hostname }}"
- "*.interactivetoolentrypoint.interactivetool.{{ hostname }}"
certbot_dns_provider: cloudflare
certbot_dns_credentials:
  api_token: "{{ vault_dns_cloudflare_api_token }}"
dns-cloudflare-propagation-seconds: 60

nginx_ssl_servers:
  - galaxy
  - galaxy-gie-proxy

#gie proxy hostname
interactive_tools_server_name: "{{ hostname }}"

galaxy_db_user_password: "{{ vault_staging_db_user_password }}"

# NFS stuff
nfs_exports:
    - "{{ galaxy_root }}  *(rw,async,no_root_squash,no_subtree_check)"

# ansible-galaxy
# galaxy_repo: https://github.com/galaxyproject/galaxy.git
galaxy_repo: https://github.com/usegalaxy-au/galaxy.git  # usegalaxy-au fork of galaxy
galaxy_commit_id: release_21.05_cloudstor

# Use cloudstor branch and extra tool_conf file and user prefs for cloudstor tool
use_cloudstor_conf: true

galaxy_dynamic_job_rules_src_dir: files/galaxy/dynamic_job_rules/staging
galaxy_dynamic_job_rules_dir: "{{ galaxy_root }}/dynamic_job_rules"
galaxy_dynamic_job_rules:
  - dynamic_rules/destination_mapper.py
  - dynamic_rules/tool_destinations.yml
  - readme.txt

galaxy_tools_indices_dir: "{{ galaxy_root }}"
galaxy_tmp_dir: "{{ galaxy_root }}/tmp"

galaxy_file_path: "{{ galaxy_root }}/data"
nginx_upload_store_base_dir: "{{ galaxy_file_path }}/upload_store"
nginx_upload_store_dir: "{{ nginx_upload_store_base_dir }}/uploads"
nginx_upload_job_files_store_dir: "{{ nginx_upload_store_base_dir }}/job_files"

# ITs tool conf overrides.
tool_config_files: "{{ cloudstor_settings['tool_config_files'] if use_cloudstor_conf|d(false) == true else default_settings['tool_config_files'] }},{{ galaxy_config_dir }}/tool_conf_interactive.xml"

host_galaxy_config_templates:
  - src: "{{ galaxy_config_template_src_dir }}/config/oidc_backends_config.xml.j2"
    dest: "{{ galaxy_config_dir}}/oidc_backends_config.xml"

host_galaxy_config_files:
  - src: "{{ galaxy_config_file_src_dir }}/config/oidc_config.xml"
    dest: "{{ galaxy_config_dir}}/oidc_config.xml"

galaxy_handler_count: 2   ############# europe uses 5, this could be host specific

host_galaxy_config:  # renamed from __galaxy_config
  galaxy:
    admin_users: "{{ machine_users | selectattr('email', 'defined') | selectattr('roles', 'contains', 'galaxy_admin') | map(attribute='email') | join(',') }}"
    brand: "Australia Staging"
    database_connection: "postgresql://galaxy:{{ vault_staging_db_user_password }}@staging-db.usegalaxy.org.au:5432/galaxy"
    id_secret: "{{ vault_staging_id_secret }}"
    file_path: "{{ galaxy_file_path }}"
    galaxy_infrastructure_url: 'https://staging.usegalaxy.org.au'
    interactivetools_enable: true
    interactivetools_map: "{{ gie_proxy_sessions_path }}"
    enable_oidc: true
    oidc_config_file: "{{ galaxy_config_dir }}/oidc_config.xml"
    oidc_backends_config_file: "{{ galaxy_config_dir }}/oidc_backends_config.xml"
    # nginx upload module
    nginx_upload_store: "{{ nginx_upload_store_dir }}"
    nginx_upload_path: '/_upload'
    nginx_upload_job_files_store: "{{ nginx_upload_job_files_store_dir }}"
    nginx_upload_job_files_path: '/_job_files'
    dependency_resolvers_config_file: "{{ galaxy_server_dir }}/config/dependency_resolvers_conf.xml.sample"  # remove for 21.09

#Galaxy Job Conf
galaxy_jobconf:
    plugin_workers: 4
    handlers:
        count: "{{ galaxy_handler_count }}"
    plugins:
      - id: local
        load: galaxy.jobs.runners.local:LocalJobRunner
        workers: 4
      - id: dynamic
        params:
          rules_module: dynamic_rules
      - id: slurm
        load: galaxy.jobs.runners.slurm:SlurmJobRunner
      - id: pulsar_au_01
        load: galaxy.jobs.runners.pulsar:PulsarMQJobRunner
        params:
            amqp_url: "pyamqp://galaxy_au:{{ vault_rabbitmq_password_galaxy_au_staging }}@staging-queue.usegalaxy.org.au:5671//pulsar/galaxy_au?ssl=1"
            galaxy_url: "https://staging.usegalaxy.org.au"
            manager: _default_
            amqp_acknowledge: True
            amqp_ack_republish_time: 300
            amqp_consumer_timeout: 2.0
            amqp_publish_retry: True
            amqp_publish_retry_max_retries: 60
      - id: pulsar_embedded
        load: galaxy.jobs.runners.pulsar:PulsarEmbeddedJobRunner
        params:
            pulsar_config: "{{ galaxy_config_dir }}/pulsar_app.yml"
    default_destination: gateway
    destinations:
      - id: local
        runner: local
      - id: gateway
        runner: dynamic
        params:
            type: python
            function: gateway
      - id: dynamic_dtd
        runner: dynamic
        params:
          type: dtd
      - id: slurm_1slot
        runner: slurm
        params:
          nativeSpecification: "--nodes=1 --ntasks=1 --ntasks-per-node=1 --mem=3880"
      - id: slurm_2slots
        runner: slurm
        params:
          nativeSpecification: "--nodes=1 --ntasks=2 --ntasks-per-node=2 --mem=7760"
      - id: pulsar_destination
        runner: pulsar_au_01
        params:
              jobs_directory: /mnt/pulsar/files/staging
              transport: curl
              remote_metadata: "false"
              default_file_action: remote_transfer
              dependency_resolution: remote
              rewrite_parameters: "true"
              persistence_directory: /mnt/pulsar/files/persisted_data
              submit_native_specification: "--nodes=1 --ntasks=2 --ntasks-per-node=2"
      - id: interactive_pulsar
        runner: pulsar_embedded
        params:
              docker_enabled: true
              docker_volumes: $defaults
              docker_sudo: false
              docker_net: bridge
              docker_auto_rm: true
              docker_set_user: ''
              require_container: true
              container_monitor_result: callback
    limits:
      #General limits for user submission
      - type: anonymous_user_concurrent_jobs
        value: 1
      - type: registered_user_concurrent_jobs
        value: 10
    tools:
      - id: interactive_tool_ethercalc
        destination: interactive_pulsar
      - id: interactive_tool_rstudio
        destination: interactive_pulsar
      - id: interactive_tool_jupyter_notebook
        destination: interactive_pulsar
      - id: interactive_tool_phinch
        destination: interactive_pulsar

# cvmfs
cvmfs_cache_base: /mnt/var/lib/cvmfs

# vars for setting up .pgpass
pg_db_password:
  galaxy: "{{ vault_staging_db_user_password }}"
  reader: "{{ vault_staging_db_reader_password }}"
  tiaasadmin: "{{ vault_staging_db_tiaasadmin_password }}"
db_address: "staging-db.usegalaxy.org.au"
gxadmin_ubuntu_config_dir: /home/ubuntu/.config

# AAF specific settings
aaf_issuer_url: "{{ vault_aaf_issuer_url_staging }}"
aaf_client_id: "{{ vault_aaf_client_id_staging }}"
aaf_client_secret: "{{ vault_aaf_client_secret_staging }}"
