# Specific settings for galaxy dev application/web server

add_hosts_handlers: yes

# Login override - checksum for Login.vue
galaxy_login_checksum_expected: fd733fa7ea21a22f6f99a095f8c2646b

# total perspective vortex
tpv_version: "1.4.0"

# variables for attaching mounted volume to application server
attached_volumes:
  - device: /dev/vdb
    path: /mnt
    fstype: ext4

shared_mounts:
  - path: /mnt/test_mount
    src: 115.146.87.37:/galaxy-backup-au
    fstype: nfs
    state: mounted

certbot_domains:
  - "{{ hostname }}"
  - "*.interactivetoolentrypoint.interactivetool.{{ hostname }}"
  - "assembly.{{ hostname }}"
certbot_dns_provider: cloudflare
certbot_dns_credentials:
  api_token: "{{ vault_dns_cloudflare_api_token }}"
dns-cloudflare-propagation-seconds: 60

nginx_ssl_servers:
  - galaxy
  - galaxy-gie-proxy

#gie proxy hostname
interactive_tools_server_name: "{{ hostname }}"

galaxy_db_user_password: "{{ vault_dev_db_user_password }}"

# ansible-galaxy
galaxy_dynamic_job_rules_src_dir: files/galaxy/dynamic_job_rules/dev
galaxy_dynamic_job_rules_dir: "{{ galaxy_root }}/dynamic_job_rules"
galaxy_dynamic_job_rules:
  - dynamic_rules/destination_mapper.py
  - dynamic_rules/tool_destinations.yml
  - total_perspective_vortex/default_tool.yml
  - total_perspective_vortex/interactive_tools.yml
  - total_perspective_vortex/vortex_config.yml
  - total_perspective_vortex/reservation_destinations.yml
  - readme.txt

galaxy_systemd_mode: gravity
galaxy_systemd_env:
  [DRMAA_LIBRARY_PATH="/usr/lib/slurm-drmaa/lib/libdrmaa.so.1"]
galaxy_gravity_state_dir: "/opt/galaxy"

galaxy_tools_indices_dir: "{{ galaxy_root }}"
galaxy_custom_indices_dir: "{{ galaxy_root }}/custom-indices"
galaxy_tmp_dir: "{{ galaxy_root }}/tmp"
galaxy_tus_upload_store: "{{ galaxy_tmp_dir }}/tus"

galaxy_repo: https://github.com/galaxyproject/galaxy.git
galaxy_commit_id: release_22.05

galaxy_file_path: "{{ galaxy_root }}/data-3"
nginx_upload_store_base_dir: "{{ galaxy_file_path }}/upload_store"
nginx_upload_store_dir: "{{ nginx_upload_store_base_dir }}/uploads"
nginx_upload_job_files_store_dir: "{{ nginx_upload_store_base_dir }}/job_files"

host_galaxy_config_templates:
  - src: "{{ galaxy_config_template_src_dir }}/config/dev_object_store_conf.xml.j2"
    dest: "{{ galaxy_config_dir }}/object_store_conf.xml"
  - src: "{{ galaxy_config_template_src_dir }}/config/oidc_backends_config.xml.j2"
    dest: "{{ galaxy_config_dir}}/oidc_backends_config.xml"
  - src: "{{ galaxy_config_template_src_dir }}/config/dev_job_conf.yml.j2"
    dest: "{{ galaxy_config_dir}}/job_conf.yml"
  - src: "{{ galaxy_config_template_src_dir }}/toolbox/filters/ga_filters.py.j2"
    dest: "{{ galaxy_server_dir }}/lib/galaxy/tools/toolbox/filters/ga_filters.py"
  - src: "{{ galaxy_config_file_src_dir }}/config/web-gravity.yml"
    dest: /opt/galaxy/web-gravity.yml

host_galaxy_config_files:
  - src: "{{ galaxy_config_file_src_dir }}/config/oidc_config.xml"
    dest: "{{ galaxy_config_dir}}/oidc_config.xml"
  - src: "{{ galaxy_config_file_src_dir }}/config/local_tool_conf_dev.xml"
    dest: "{{ galaxy_config_dir }}/local_tool_conf.xml"
  - src: "{{ galaxy_config_file_src_dir }}/config/additional_datatypes_conf.xml"
    dest: "{{ galaxy_config_dir }}/additional_datatypes_conf.xml"
  - src: "{{ galaxy_config_file_src_dir }}/config/trs_servers_conf.yml"
    dest: "{{ galaxy_config_dir }}/trs_servers_conf.yml"

galaxy_config_file: /opt/galaxy/galaxy.yml

host_galaxy_config: # renamed from __galaxy_config
  gravity:
    galaxy_root: /mnt/galaxy/galaxy-app
    app_server: gunicorn
    virtualenv: /mnt/galaxy/venv
    gunicorn:
      # listening options
      bind: "unix:{{ galaxy_mutable_config_dir }}/gunicorn.sock"
      # performance options
      workers: 2
      # Other options that will be passed to gunicorn
      extra_args: '--forwarded-allow-ips="*"'
      preload: true
      environment:
        DRMAA_LIBRARY_PATH: "/usr/lib/slurm-drmaa/lib/libdrmaa.so.1"
    celery:
      enable: false
      enable_beat: false
    #   concurrency: 2
    #   loglevel: DEBUG
    # handlers:
    #   handler:
    #     processes: 3
    #     environment:
    #       DRMAA_LIBRARY_PATH: "/usr/lib/slurm-drmaa/lib/libdrmaa.so.1"
    #     pools:
    #       - job-handlers
    #       - workflow-schedulers

  galaxy:
    admin_users: "{{ machine_users | selectattr('email', 'defined') | map(attribute='email') | join(',') }},uwe@biocommons.org.au,uwwint@gmail.com" # everyone is an admin on dev
    amqp_internal_connection: "pyamqp://galaxy_queues:{{ vault_rabbitmq_password_galaxy_dev }}@dev-queue.usegalaxy.org.au:5671//galaxy/galaxy_queues?ssl=1"
    brand: "Australia Dev"
    database_connection: "postgresql://galaxy:{{ vault_dev_db_user_password }}@dev-db.usegalaxy.org.au:5432/galaxy"
    enable_celery_tasks: true
    id_secret: "{{ vault_dev_id_secret }}"
    file_path: "{{ galaxy_file_path }}"
    object_store_config_file: "{{ galaxy_config_dir }}/object_store_conf.xml"
    galaxy_infrastructure_url: "https://dev.usegalaxy.org.au"
    enable_oidc: true
    oidc_config_file: "{{ galaxy_config_dir }}/oidc_config.xml"
    oidc_backends_config_file: "{{ galaxy_config_dir }}/oidc_backends_config.xml"
    nginx_upload_store: "{{ nginx_upload_store_dir }}"
    nginx_upload_path: "/_upload"
    nginx_upload_job_files_store: "{{ nginx_upload_job_files_store_dir }}"
    nginx_upload_job_files_path: "/_job_files"
    interactivetools_enable: true
    interactivetools_map: "{{ gie_proxy_sessions_path }}"
    cleanup_job: never
    job_config_file: "{{ galaxy_config_dir }}/job_conf.yml"
    show_welcome_with_login: false
    enable_mulled_containers: true
    enable_beta_containers_interface: true
    watch_job_rules: true # important for total perspective vortex
    sentry_dsn: "{{ vault_sentry_dsn_dev }}"
    tool_filters: ga_filters:hide_test_tools
    tool_section_filters: global_host_filters:per_host_tool_sections
    tool_label_filters: global_host_filters:per_host_tool_labels
    #TRS - workflowhub
    trs_servers_config_file: "{{ galaxy_config_dir }}/trs_servers_conf.yml"
    # TUS
    tus_upload_store: "{{ galaxy_tus_upload_store }}"
    datatypes_config_file: "{{ galaxy_server_dir }}/lib/galaxy/config/sample/datatypes_conf.xml.sample,{{ galaxy_config_dir }}/additional_datatypes_conf.xml"

galaxy_handler_count: 2 ############# europe uses 5, this could be host specific

# TUS
tusd_instances:
  - name: main
    user: "{{ galaxy_user.name }}"
    group: "galaxy"
    args:
      - "-host=localhost"
      - "-port={{ galaxy_tusd_port }}"
      - "-upload-dir={{ galaxy_tus_upload_store }}"
      - "-hooks-http=https://{{ hostname }}/api/upload/hooks"
      - "-hooks-http-forward-headers=X-Api-Key,Cookie"

# NFS stuff
nfs_exports:
  - "{{ galaxy_root }}  *(rw,async,no_root_squash,no_subtree_check)"

# cvmfs
cvmfs_cache_base: /mnt/var/lib/cvmfs

# vars for setting up .pgpass
pg_db_password:
  galaxy: "{{ vault_dev_db_user_password }}"
  reader: "{{ vault_dev_db_reader_password }}"
  tiaasadmin: "{{ vault_dev_db_tiaasadmin_password }}"
db_address: "dev-db.usegalaxy.org.au"
gxadmin_ubuntu_config_dir: /home/ubuntu/.config

# TIaaS specific settings
tiaas_repo: https://github.com/galaxyproject/tiaas2
tiaas_version: main2 # New GalaxyAU version
tiaas_galaxy_db_host: "dev-db.usegalaxy.org.au"
tiaas_galaxy_db_port: "5432"
tiaas_galaxy_db_user: "tiaasadmin"
tiaas_galaxy_db_pass: "{{ vault_dev_db_tiaasadmin_password }}"
tiaas_info:
  owner: "Galaxy Australia Dev"
  owner_email: help@genome.edu.au
  owner_site: https://site.usegalaxy.org.au
  domain: dev.usegalaxy.org.au

tiaas_other_config: |
  # Cam's mailtrap account
  EMAIL_HOST = 'smtp.mailtrap.io'
  EMAIL_PORT = 2525
  EMAIL_HOST_USER = '7ac4110c7f742c'
  EMAIL_HOST_PASSWORD = '{{ tiaas_email_password }}'
  EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
  EMAIL_TIMEOUT = 60
  TIAAS_SEND_EMAIL_TO = "help@genome.edu.au"
  TIAAS_SEND_EMAIL_FROM = "tiaas-no-reply@usegalaxy.org.au"
  TIAAS_SEND_EMAIL_TO_REQUESTER = True
  TIAAS_LATE_REQUEST_PREVENTION_DAYS = 7
  TIAAS_GDPR_AUTO_REDACT = False

# Create a cron job to disassociate training roles from groups after trainings have expired, set to `false` to disable
tiaas_disassociate_training_roles:
  hour: 9 # optional, defaults to 0
  minute: 0 # optional, defaults to 0

tiaas_show_advertising: false
tiaas_retain_contact_consent: false

# Templates to override web content:
tiaas_templates_dir: files/tiaas/html
# Static files referenced by above templates:
tiaas_extra_static_dir: files/tiaas/static

# AAF specific settings
aaf_issuer_url: "{{ vault_aaf_issuer_url_dev }}"
aaf_client_id: "{{ vault_aaf_client_id_dev }}"
aaf_client_secret: "{{ vault_aaf_client_secret_dev }}"

# Other OIDC providers
extra_oidc_providers:
  - provider: CILogon
    url: https://cilogon.org/authorize
    client_id: "{{ vault_dev_cilogon_client }}"
    client_secret: "{{ vault_dev_cilogon_secret }}"
    redirect_uri: https://dev.usegalaxy.org.au/authnz/cilogon/callback
    realm: master

# remote-pulsar-cron variables
rpc_skip_cron_setup: false
rpc_db_connection_string: "postgres://reader:{{ vault_dev_db_reader_password }}@dev-db.usegalaxy.org.au:5432/galaxy"

rpc_pulsar_machines:
  - pulsar_name: dev-pulsar
    pulsar_ip_address: "{{ hostvars['dev-pulsar']['ansible_ssh_host'] }}"
    ssh_key: /home/ubuntu/.ssh/ubuntu_maintenance_key
    delete_jwds: true
    keep_error_days: 7
    cron_hour: "07"
    cron_minute: "32"

extra_keys:
  - id: ubuntu_maintenance_key
    type: private

# Docker
docker_users:
  - "{{ galaxy_user.name }}"
docker_daemon_options:
  data-root: /mnt/docker-data

# Singularity and docker volumes
slurm_singularity_volumes_list:
  - "$job_directory:rw"
  - "$galaxy_root:ro"
  - "$tool_directory:ro"
  - "/mnt/galaxy/data:ro"
  - "/mnt/galaxy/data-2:ro"
  - "/mnt/galaxy/data-3:ro"
  - "/mnt/test_mount:ro"
  - "/cvmfs/data.galaxyproject.org:ro"

pulsar_singularity_volumes_list:
  - "$job_directory:rw"
  - "$tool_directory:ro"
  - "/cvmfs/data.galaxyproject.org:ro"

slurm_docker_volumes_list: "{{ slurm_singularity_volumes_list }}"
pulsar_docker_volumes_list: "{{ pulsar_singularity_volumes_list }}"

# comma separated strings for the job conf
slurm_singularity_volumes: "{{ slurm_singularity_volumes_list | join(',') }}"
pulsar_singularity_volumes: "{{ pulsar_singularity_volumes_list | join(',') }}"
slurm_docker_volumes: "{{ slurm_docker_volumes_list | join(',') }}"
pulsar_docker_volumes: "{{ pulsar_docker_volumes_list | join(',') }}"

singularity_default_container_id: "/cvmfs/singularity.galaxyproject.org/all/python:3.8.3"

# multisite stuff

galaxy_subsite_base_domain: "dev.usegalaxy.org.au"
galaxy_subsite_default_welcome: "https://site.usegalaxy.org.au"
galaxy_subsite_dir: /mnt/galaxy/subsites
#galaxy_subsite_base_css: '#masthead { background-color: #003399;}'
galaxy_subsites:
  - name: assembly # Accessible at test.usegalaxy.org
    brand: Assembly
    iframe: "https://site.usegalaxy.org.au/landing/assembly"
    wallpaper: false # If wallpaper is true, then files/subsites/{name}.png will be copied to /static/dist/{name}.png, and can be used exactly like that in the CSS.
    tool_sections:
      - "hicexplorer"
      - "plots"
      - "assembly"
      - "annotation"
      - "phylogenetics"
      - "multiple_alignments"
    custom_css: |
      #masthead {
          background: linear-gradient(20deg, rgb(7, 40, 98) 0%, rgb(69, 122, 184) 48%, rgba(165,204,210,0.9676562309265136) 74%, rgb(228, 195, 131) 92%, rgb(203, 119, 79) 100%);
      }
      @keyframes fly-right-one {
          0% {
              transform: translateY(-2vh) translateX(-55vw) scale(0.5);
          }
          15% {
              transform: translateY(0vh) translateX(-45vw) scale(0.4);
          }
          30% {
              transform: translateY(-2vh) translateX(-25vw) scale(0.6);
          }
          45% {
              transform: translateY(1vh) translateX(-5vw) scale(0.45);
          }
          60% {
              transform: translateY(-2vh) translateX(16vw) scale(0.5);
          }
          75% {
              transform: translateY(0vh) translateX(28vw) scale(0.45);
          }
          100% {
              transform: translateY(-1vh) translateX(48vw) scale(0.45);
          }
      }
      @keyframes fly-right-two {
          0% {
              transform: translateY(2vh) translateX(-55vw) scale(0.5);
          }
          25% {
              transform: translateY(0vh) translateX(-35vw) scale(0.4);
          }
          50% {
              transform: translateY(-2vh) translateX(-10vw) scale(0.6);
          }
          75% {
              transform: translateY(1vh) translateX(19vw) scale(0.45);
          }
          100% {
              transform: translateY(0.5vh) translateX(48vw) scale(0.45);
          }
      }
       @keyframes fly-cycle {
           100% {
               background-position: -900px 0;
          }
      }
      #masthead:before {
      position: absolute;
      content: "";
      width: 88px;
      height: 125px;
      background-size: auto 100%;
      animation: fly-cycle  1s steps(10) infinite, fly-right-one  9s linear infinite;
      /* back-up alternative https://usegalaxy-eu.github.io/assets/media/bird-cells-new.svg */
      background-image: url(https://s3-us-west-2.amazonaws.com/s.cdpn.io/174479/bird-cells-new.svg);
      }
      #masthead:after {
      position: absolute;
      content: "";
      width: 88px;
      height: 125px;
      background-size: auto 100%;
      animation: fly-cycle  1s steps(10) infinite, fly-right-two 15s linear infinite;
      /* back-up alternative https://usegalaxy-eu.github.io/assets/media/bird-cells-new.svg */
      background-image: url(https://s3-us-west-2.amazonaws.com/s.cdpn.io/174479/bird-cells-new.svg);
      }
