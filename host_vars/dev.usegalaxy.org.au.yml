# Specific settings for galaxy dev application/web server

# Login override - checksum for Login.vue
galaxy_login_checksum_expected: fd733fa7ea21a22f6f99a095f8c2646b

# total perspective vortex package
tpv_commit_id: "b5a91079622a8c76529d08abd3fa8e865289767a"
total_perspective_vortex_package: "git+https://github.com/usegalaxy-au/total-perspective-vortex@{{ tpv_commit_id }}"

# variables for attaching mounted volume to application server
attached_volumes:
  - device: /dev/vdb
    path: /mnt
    fstype: ext4

certbot_domains:
  - "{{ hostname }}"
  - "*.interactivetoolentrypoint.interactivetool.{{ hostname }}"
certbot_dns_provider: cloudflare
certbot_dns_credentials:
  api_token: "{{ vault_dns_cloudflare_api_token }}"
dns-cloudflare-propagation-seconds: 60

nginx_ssl_servers:
  - galaxy
  - galaxy-gie-proxy

#gie proxy hostname
interactive_tools_server_name: "{{ hostname }}"

galaxy_db_user_password: "{{ vault_dev_db_user_password }}"

# ansible-galaxy
galaxy_dynamic_job_rules_src_dir: files/galaxy/dynamic_job_rules/dev
galaxy_dynamic_job_rules_dir: "{{ galaxy_root }}/dynamic_job_rules"
galaxy_dynamic_job_rules:
  - dynamic_rules/destination_mapper.py
  - dynamic_rules/tool_destinations.yml
  - total_perspective_vortex/default_tool.yml
  - total_perspective_vortex/interactive_tools.yml
  - total_perspective_vortex/vortex_config.yml
  - readme.txt

galaxy_tools_indices_dir: "{{ galaxy_root }}"
galaxy_custom_indices_dir: "{{ galaxy_root }}/custom-indices" 
galaxy_tmp_dir: "{{ galaxy_root }}/tmp"

galaxy_repo: https://github.com/galaxyproject/galaxy.git
galaxy_commit_id: release_21.09

galaxy_file_path: "{{ galaxy_root }}/data"
nginx_upload_store_base_dir: "{{ galaxy_file_path }}/upload_store"
nginx_upload_store_dir: "{{ nginx_upload_store_base_dir }}/uploads"
nginx_upload_job_files_store_dir: "{{ nginx_upload_store_base_dir }}/job_files"

host_galaxy_config_templates:
  - src: "{{ galaxy_config_template_src_dir }}/config/oidc_backends_config.xml.j2"
    dest: "{{ galaxy_config_dir}}/oidc_backends_config.xml"
  - src: "{{ galaxy_config_template_src_dir }}/config/dev_job_conf.yml.j2"
    dest: "{{ galaxy_config_dir}}/job_conf.yml"
  - src: "{{ galaxy_config_template_src_dir }}/toolbox/filters/ga_filters.py.j2"
    dest: "{{ galaxy_server_dir }}/lib/galaxy/tools/toolbox/filters/ga_filters.py"

host_galaxy_config_files:
  - src: "{{ galaxy_config_file_src_dir }}/config/oidc_config.xml"
    dest: "{{ galaxy_config_dir}}/oidc_config.xml"
  - src: "{{ galaxy_config_file_src_dir }}/config/local_tool_conf_dev.xml"
    dest: "{{ galaxy_config_dir }}/local_tool_conf.xml"

host_galaxy_config:  # renamed from __galaxy_config
  galaxy:
    admin_users: "{{ machine_users | selectattr('email', 'defined') | map(attribute='email') | join(',') }}" # everyone is an admin on dev
    brand: "Australia Dev"
    database_connection: "postgresql://galaxy:{{ vault_dev_db_user_password }}@dev-db.usegalaxy.org.au:5432/galaxy"
    id_secret: "{{ vault_dev_id_secret }}"
    file_path: "{{ galaxy_file_path }}"
    galaxy_infrastructure_url: 'https://dev.usegalaxy.org.au'
    enable_oidc: true
    oidc_config_file: "{{ galaxy_config_dir }}/oidc_config.xml"
    oidc_backends_config_file: "{{ galaxy_config_dir }}/oidc_backends_config.xml"
    nginx_upload_store: "{{ nginx_upload_store_dir }}"
    nginx_upload_path: '/_upload'
    nginx_upload_job_files_store: "{{ nginx_upload_job_files_store_dir }}"
    nginx_upload_job_files_path: '/_job_files'
    interactivetools_enable: true
    interactivetools_map: "{{ gie_proxy_sessions_path }}"
    cleanup_job: never
    job_config_file: "{{ galaxy_config_dir }}/job_conf.yml"
    show_welcome_with_login: false
    enable_mulled_containers: true
    enable_beta_containers_interface: true
    watch_job_rules: true  # important for total perspective vortex
    sentry_dsn: "{{ vault_sentry_dsn_dev }}"
    tool_filters: ga_filters:hide_test_tools

galaxy_handler_count: 2   ############# europe uses 5, this could be host specific

# NFS stuff
nfs_exports:
    - "{{ galaxy_root }}  *(rw,async,no_root_squash,no_subtree_check)"

# cvmfs
cvmfs_cache_base: /mnt/var/lib/cvmfs

# vars for setting up .pgpass
pg_db_password:
  galaxy: "{{ vault_dev_db_user_password }}"
  reader: "{{ vault_dev_db_reader_password }}"
  tiaasadmin: "{{ vault_dev_db_tiaasadmin_password }}"
db_address: "dev-db.usegalaxy.org.au"
gxadmin_ubuntu_config_dir: /home/ubuntu/.config

# TIaaS specific settings
tiaas_galaxy_db_host: "dev-db.usegalaxy.org.au"
tiaas_galaxy_db_port: "5432"
tiaas_galaxy_db_user: "tiaas"
tiaas_galaxy_db_pass: "{{ tiaas_galaxy_db_password }}"
tiaas_info:
  owner: "Galaxy Australia Dev"
  owner_email: help@genome.edu.au
  owner_site: "https://dev.usegalaxy.org.au"
  domain: "dev.usegalaxy.org.au"

  # Create a cron job to disassociate training roles from groups after trainings have expired, set to `false` to disable
tiaas_disassociate_training_roles:
  hour: 9      # optional, defaults to 0
  minute: 0    # optional, defaults to 0

# AAF specific settings
aaf_issuer_url: "{{ vault_aaf_issuer_url_dev }}"
aaf_client_id: "{{ vault_aaf_client_id_dev }}"
aaf_client_secret: "{{ vault_aaf_client_secret_dev }}"

# remote-pulsar-cron variables
rpc_skip_cron_setup: false
rpc_db_connection_string: "postgres://reader:{{ vault_dev_db_reader_password }}@dev-db.usegalaxy.org.au:5432/galaxy"

rpc_pulsar_machines:
  - pulsar_name: dev-pulsar
    pulsar_ip_address: "{{ hostvars['dev-pulsar']['ansible_ssh_host'] }}"
    ssh_key: /home/ubuntu/.ssh/ubuntu_maintenance_key
    delete_jwds: true
    keep_error_days: 7
    cron_hour: "07"
    cron_minute: "32"

extra_keys:
  - id: ubuntu_maintenance_key
    type: private

# Golang
golang_gopath: '/var/workspace-go'

# Singularity target version
singularity_version: "3.7.4"
singularity_go_path: "{{ golang_install_dir }}"
