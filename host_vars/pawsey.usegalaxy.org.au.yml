# Specific settings for galaxy dev application/web server

#TO DO:
#

# variables for attaching mounted volume to application server
attached_volumes:
  - device: /dev/sdc
    path: /mnt
    fstype: ext4

certbot_domains:
  - "{{ hostname }}"
  - "usegalaxy.org.au"
  - "www.usegalaxy.org.au"
  - "*.interactivetoolentrypoint.interactivetool.usegalaxy.org.au"
certbot_dns_provider: cloudflare
certbot_dns_credentials:
  api_token: "{{ vault_dns_cloudflare_api_token }}"
dns-cloudflare-propagation-seconds: 60

nginx_ssl_servers:
  - galaxy
  - galaxy-gie-proxy

  #gie proxy hostname
interactive_tools_server_name: "usegalaxy.org.au"

# total perspective vortex
tpv_version: "1.2.0"

galaxy_repo: https://github.com/galaxyproject/galaxy.git
galaxy_commit_id: release_21.09

# Mounts for various connections:
shared_mounts:
  - path: /mnt/ghost-galaxy-app
    src: "{{ hostvars['pawsey-misc-nfs']['internal_ip'] }}:/mnt/ghost-galaxy-app"
    fstype: nfs
    state: mounted
  - path: /mnt/tools-indices
    src: "{{ hostvars['pawsey-misc-nfs']['internal_ip'] }}:/mnt/tools-indices"
    fstype: nfs
    state: mounted
  - path: /mnt/custom-indices
    src: "{{ hostvars['pawsey-misc-nfs']['internal_ip'] }}:/custom-indices"
    fstype: nfs
    state: mounted
  - path: /mnt/user-data
    src: "{{ hostvars['pawsey-user-nfs']['internal_ip'] }}:/mnt/user-data"
    fstype: nfs
    state: mounted
  - path: /mnt/user-data-2
    src: "{{ hostvars['pawsey-user-nfs']['internal_ip'] }}:/user-data-2"
    fstype: nfs
    state: mounted
  - path: /mnt/user-data-3
    src: "{{ hostvars['pawsey-user-nfs']['internal_ip'] }}:/user-data-3"
    fstype: nfs
    state: mounted
  - path: /mnt/user-data-4
    src: "{{ hostvars['pawsey-user-nfs']['internal_ip'] }}:/user-data-4"
    fstype: nfs
    state: mounted
  - path: /mnt/tmp
    src: "{{ hostvars['pawsey-job-nfs']['internal_ip'] }}:/mnt/tmp"
    fstype: nfs
    state: mounted
  - path: /mnt/files
    src: "galaxy-aust-exports.genome.edu.au:/Q0028_files"
    fstype: nfs
    state: mounted
  - path: /mnt/files2
    src: "galaxy-aust-exports.genome.edu.au:/mnt/files2"
    fstype: nfs
    state: mounted

galaxy_db_user_password: "{{ vault_pawsey_db_user_password }}"

# ansible-galaxy
galaxy_dynamic_job_rules_src_dir: files/galaxy/dynamic_job_rules/load-testing
galaxy_dynamic_job_rules_dir: "{{ galaxy_root }}/dynamic_job_rules"
galaxy_dynamic_job_rules:
  - total_perspective_vortex/testing_tpv_config.yml
  #- total_perspective_vortex/destinations.yml
  #- total_perspective_vortex/users.yml
  #- total_perspective_vortex/roles.yml
  # - total_perspective_vortex/interactive_tools.yml # leave these as mapped from job_conf for now
  # - total_perspective_vortex/default_tool.yml.j2 # a future version of galaxyproject.galaxy will allow listing templates here
  - dynamic_rules/destination_mapper.py
  - dynamic_rules/tool_destinations.yml
  - readme.txt

galaxy_tools_indices_dir: /mnt/tools-indices
galaxy_custom_indices_dir: /mnt/custom-indices
galaxy_tmp_dir: /mnt/tmp

galaxy_handler_count: 5 ############# europe uses 5, this could be host specific

galaxy_file_path: /mnt/user-data/load-test
nginx_upload_store_base_dir: "{{ galaxy_file_path }}/upload_store"
nginx_upload_store_dir: "{{ nginx_upload_store_base_dir }}/uploads"
nginx_upload_job_files_store_dir: "{{ nginx_upload_store_base_dir }}/job_files"
nginx_upload_store_set_cleanup_cron_job: true

host_galaxy_config_files:
  - src: "{{ galaxy_config_file_src_dir }}/config/pawsey_object_store_conf.xml"
    dest: "{{ galaxy_config_dir }}/object_store_conf.xml"

host_galaxy_config_templates:
  - src: "{{ galaxy_config_template_src_dir }}/config/pawsey_job_conf.yml.j2"
    dest: "{{ galaxy_config_dir }}/job_conf.yml"
  - src: "{{ galaxy_dynamic_job_rules_src_dir }}/total_perspective_vortex/default_tool.yml.j2"
    dest: "{{ galaxy_dynamic_job_rules_dir }}/total_perspective_vortex/default_tool.yml"
  - src: "{{ galaxy_config_template_src_dir }}/toolbox/filters/ga_filters.py.j2"
    dest: "{{ galaxy_server_dir }}/lib/galaxy/tools/toolbox/filters/ga_filters.py"

host_galaxy_config: # renamed from __galaxy_config
  uwsgi: # todo: check desired dev settings for processes, threads, logging, mule, farm, look at how this is defined in prod galaxy.yml
    socket: 127.0.0.1:8080
    buffer-size: 16384
    processes: 5
    threads: 4
    offload-threads: 2
    static-map:
      - /static/style={{ galaxy_server_dir }}/static/style/blue
      - /static={{ galaxy_server_dir }}/static
      - /favicon.ico={{ galaxy_server_dir }}/static/favicon.ico
    static-safe: client/galaxy/images
    master: true
    virtualenv: "{{ galaxy_venv_dir }}"
    pythonpath: "{{ galaxy_server_dir }}/lib"
    module: galaxy.webapps.galaxy.buildapp:uwsgi_app()
    thunder-lock: true
    die-on-term: true
    hook-master-start:
      - unix_signal:2 gracefully_kill_them_all
      - unix_signal:15 gracefully_kill_them_all
    py-call-osafterfork: true
    enable-threads: true
    mule:
      - lib/galaxy/main.py
      - lib/galaxy/main.py
      - lib/galaxy/main.py
      - lib/galaxy/main.py
      - lib/galaxy/main.py
    farm: job-handlers:1,2,3,4,5
  galaxy:
    admin_users: "{{ machine_users | selectattr('email', 'defined') | selectattr('roles', 'contains', 'galaxy_admin') | map(attribute='email') | join(',') }},{{ bpa_email }}"
    brand: "Australia"
    database_connection: "postgresql://galaxy:{{ vault_pawsey_db_user_password }}@{{ hostvars['pawsey-db']['internal_ip'] }}:5432/galaxy"
    id_secret: "{{ vault_pawsey_id_secret }}"
    file_path: "{{ galaxy_file_path }}"
    object_store_config_file: "{{ galaxy_config_dir }}/object_store_conf.xml"
    smtp_server: localhost
    ga_code: "{{ vault_prod_ga_code }}"
    interactivetools_enable: true
    interactivetools_map: "{{ gie_proxy_sessions_path }}"
    galaxy_infrastructure_url: "https://usegalaxy.org.au"
    enable_oidc: true
    oidc_config_file: "{{ galaxy_config_dir }}/oidc_config.xml"
    oidc_backends_config_file: "{{ galaxy_config_dir }}/oidc_backends_config.xml"
    # nginx upload module
    nginx_upload_store: "{{ nginx_upload_store_dir }}"
    nginx_upload_path: "/_upload"
    nginx_upload_job_files_store: "{{ nginx_upload_job_files_store_dir }}"
    nginx_upload_job_files_path: "/_job_files"
    job_config_file: "{{ galaxy_config_dir }}/job_conf.yml"
    watch_job_rules: true # important for total perspective vortex
    enable_mulled_containers: true
    enable_beta_containers_interface: true
    tool_filters: ga_filters:hide_test_tools,ga_filters:restrict_alphafold

# cvmfs
cvmfs_cache_base: /mnt/var/lib/cvmfs

# vars for setting up .pgpass
pg_db_password:
  galaxy: "{{ vault_pawsey_db_user_password }}"
  reader: "{{ vault_pawsey_db_reader_password }}"
  tiaasadmin: "{{ vault_pawsey_db_tiaasadmin_password }}"
db_address: "{{ hostvars['pawsey-db']['internal_ip'] }}"
gxadmin_ubuntu_config_dir: /home/ubuntu/.config

# vars for stats_collection
stats_dir: /home/ubuntu/stats_collection/
db_server: "{{ hostvars['pawsey-db']['internal_ip'] }}"
db_password: "{{ galaxy_db_user_password }}"
influx_salt: "{{ prod_queue_size_salt }}"
influx_db_stats: "GA_server"
add_daily_stats: true
add_montly_stats: true
add_queue_info: true
add_utilisation_info: true

#Vars for TIaaS
tiaas_galaxy_db_host: "pawsey-db.usegalaxy.org.au"
tiaas_galaxy_db_port: "5432"
tiaas_galaxy_db_user: "tiaas"
tiaas_galaxy_db_pass: "{{ tiaas_galaxy_db_password }}"
tiaas_info:
  owner: "Galaxy Australia"
  owner_email: help@genome.edu.au
  owner_site: "https://usegalaxy.org.au"
  domain: "usegalaxy.org.au"
tiaas_other_config: |
  EMAIL_HOST="localhost"
  EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
  EMAIL_TIMEOUT = 60
  TIAAS_SEND_EMAIL_TO = "help@genome.edu.au"
  TIAAS_SEND_EMAIL_FROM = "tiaas-no-reply@usegalaxy.org.au"

# Create a cron job to disassociate training roles from groups after trainings have expired, set to `false` to disable
tiaas_disassociate_training_roles:
  hour: 9 # optional, defaults to 0
  minute: 0 # optional, defaults to 0

## AAF specific settings
aaf_issuer_url: "{{ vault_aaf_issuer_url_prod }}"
aaf_client_id: "{{ vault_aaf_client_id_prod }}"
aaf_client_secret: "{{ vault_aaf_client_secret_prod }}"

# remote-pulsar-cron variables
rpc_skip_cron_setup: false
rpc_db_connection_string: "postgres://reader:{{ vault_pawsey_db_reader_password }}@pawsey-db.usegalaxy.org.au:5432/galaxy"

rpc_pulsar_machines:
  - pulsar_name: pulsar-mel3
    pulsar_ip_address: "{{ hostvars['pulsar-mel3']['ansible_ssh_host'] }}"
    ssh_key: /home/ubuntu/.ssh/ubuntu_maintenance_key
    delete_jwds: true
    keep_error_days: 7
    cron_hour: "17"
    cron_minute: "00"
  - pulsar_name: pulsar-mel2
    pulsar_ip_address: "{{ hostvars['pulsar-mel2']['ansible_ssh_host'] }}"
    ssh_key: /home/ubuntu/.ssh/ubuntu_maintenance_key
    delete_jwds: true
    keep_error_days: 7
    cron_hour: "5,11,17,23"
    cron_minute: "10"
  # - pulsar_name: pulsar-paw
  #   pulsar_ip_address: "{{ hostvars['pulsar-paw']['ansible_ssh_host'] }}"
  #   ssh_key: /home/ubuntu/.ssh/ubuntu_maintenance_key
  #   delete_jwds: true
  #   keep_error_days: 7
  #   cron_hour: "17"
  #   cron_minute: "20"
  - pulsar_name: pulsar-high-mem1
    pulsar_ip_address: "{{ hostvars['pulsar-high-mem1']['ansible_ssh_host'] }}"
    ssh_key: /home/ubuntu/.ssh/ubuntu_maintenance_key
    delete_jwds: true
    keep_error_days: 7
    cron_hour: "17"
    cron_minute: "30"
  - pulsar_name: pulsar-high-mem2
    pulsar_ip_address: "{{ hostvars['pulsar-high-mem2']['ansible_ssh_host'] }}"
    ssh_key: /home/ubuntu/.ssh/ubuntu_maintenance_key
    delete_jwds: true
    keep_error_days: 7
    cron_hour: "17"
    cron_minute: "40"
  - pulsar_name: qld-pulsar-himem-0
    pulsar_ip_address: "{{ hostvars['qld-pulsar-himem-0']['ansible_ssh_host'] }}"
    ssh_key: /home/ubuntu/.ssh/ubuntu_maintenance_key
    delete_jwds: true
    keep_error_days: 7
    cron_hour: "17"
    cron_minute: "50"
  - pulsar_name: qld-pulsar-himem-1
    pulsar_ip_address: "{{ hostvars['qld-pulsar-himem-1']['ansible_ssh_host'] }}"
    ssh_key: /home/ubuntu/.ssh/ubuntu_maintenance_key
    delete_jwds: true
    keep_error_days: 7
    cron_hour: "18"
    cron_minute: "00"
  - pulsar_name: qld-pulsar-himem-2
    pulsar_ip_address: "{{ hostvars['qld-pulsar-himem-2']['ansible_ssh_host'] }}"
    ssh_key: /home/ubuntu/.ssh/ubuntu_maintenance_key
    delete_jwds: true
    keep_error_days: 7
    cron_hour: "18"
    cron_minute: "10"
  - pulsar_name: pulsar-nci-training
    pulsar_ip_address: "{{ hostvars['pulsar-nci-training']['ansible_ssh_host'] }}"
    ssh_key: /home/ubuntu/.ssh/ubuntu_maintenance_key
    delete_jwds: true
    keep_error_days: 7
    cron_hour: "18"
    cron_minute: "20"
  - pulsar_name: pulsar-qld-blast
    pulsar_ip_address: "{{ hostvars['pulsar-qld-blast']['ansible_ssh_host'] }}"
    ssh_key: /home/ubuntu/.ssh/ubuntu_maintenance_key
    delete_jwds: true
    keep_error_days: 7
    cron_hour: "18"
    cron_minute: "30"
  # - pulsar_name: pulsar-QLD
  #   pulsar_ip_address: "{{ hostvars['pulsar-QLD']['ansible_ssh_host'] }}"
  #   pulsar_staging_dir: /mnt/tmp/files/staging
  #   ssh_key: /home/ubuntu/.ssh/ubuntu_maintenance_key
  #   delete_jwds: true
  #   keep_error_days: 7
  #   cron_hour: "18"
  #   cron_minute: "40"

extra_keys:
  - id: ubuntu_maintenance_key
    type: private

# grt-sender role
grt_sender_dir: /mnt/var/galactic_radio_telescope
grt_sender_api_key: "{{ vault_grt_api_key }}"
grt_sender_grt_url: https://telescope.usegalaxy.org.au/grt

# Docker
docker_users:
  - "{{ galaxy_user.name }}"
docker_daemon_options:
  data-root: /mnt/docker-data

# Singularity and docker volumes
slurm_singularity_volumes_list: # for production this needs /mnt/user-data 1,2,3,4 + /mnt/custom-indices, all ro
  - $job_directory:rw
  - $galaxy_root:ro
  - $tool_directory:ro
  - /mnt/user-data-4:ro
  - /mnt/user-data-3:ro
  - /mnt/user-data-2:ro
  - /mnt/user-data:ro
  - /mnt/galaxy/files:ro
  - /mnt/files:ro
  - /mnt/files2:ro
  - /mnt/custom-indices:ro
  - /cvmfs/data.galaxyproject.org:ro

pulsar_singularity_volumes_list:
  - $job_directory:rw
  - $tool_directory:ro
  - /mnt/custom-indices:ro
  - /cvmfs/data.galaxyproject.org:ro

slurm_docker_volumes_list: "{{ slurm_singularity_volumes_list }}"
pulsar_docker_volumes_list: "{{ pulsar_singularity_volumes_list }}"

# comma separated strings for the job conf
slurm_singularity_volumes: "{{ slurm_singularity_volumes_list | join(',') }}"
pulsar_singularity_volumes: "{{ pulsar_singularity_volumes_list | join(',') }}"
slurm_docker_volumes: "{{ slurm_docker_volumes_list | join(',') }}"
pulsar_docker_volumes: "{{ pulsar_docker_volumes_list | join(',') }}"

singularity_default_container_id: "/cvmfs/singularity.galaxyproject.org/all/python:3.8.3"

# conda/mamba overrides for pawsey
miniconda_version: "4.13.0"
miniconda_base_env_packages: []
galaxy_conda_exec: conda
